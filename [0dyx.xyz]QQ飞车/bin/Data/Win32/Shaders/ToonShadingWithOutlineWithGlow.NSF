// EMERGENT GAME TECHNOLOGIES PROPRIETARY INFORMATION
//
// This software is supplied under the terms of a license agreement or
// nondisclosure agreement with Emergent Game Technologies and may not 
// be copied or disclosed except in accordance with the terms of that 
// agreement.
//
//      Copyright (c) 1996-2005 Emergent Game Technologies.
//      All Rights Reserved.
//
// Emergent Game Technologies, Chapel Hill, North Carolina 27514
// http://www.emergentgametech.com

NSFShader ToonShadingWithOutlineWithGlow
{
    "This shader applies a base map and lights it with two directional "
    "lights. Then, it uses a luminance function to sample a 1D texture to "
    "produce toon shading. Finally, it draws an outline around the object "
    "that's based on the angle between the triangle normals and the camera. "
    "The 'outlineThickness' attribute is used to change the size of the "
    "outline, and can range from 0.0, where almost no outline is visible, to "
    "1.0, where the entire object appears as the outline. Because of the "
    "method of implementation, this shader looks best on rounded objects with "
    "smoothing groups. Note also that this outlining shader does the outline "
    "for each pixel individually, so the outline width will vary over the "
    "object. "

    Objects
    {
        Effect_GeneralLight   0   Light1
        Effect_GeneralLight   1   Light2
    }

    // Attribute list
    Attributes
    {
        // The thickness of the outline.  
        Attrib_Float
            outlineThickness
            Artist
            0.1
            [0.0 1.0]
        // The color of the outline.  
        Attrib_Color
            outlineColor
            Artist
            0.0, 0.0, 0.0, 1.0
        Attrib_Texture
            ToonRamp
            Artist
            0
            "ToonRamp.bmp"
        Attrib_Color
            GlowColor
            Artist
             0.5, 0.2, 0.2, 1.0
        Attrib_Color
            GlowAmbient
            Artist
            0.2, 0.2, 0.0, 0.0
        Attrib_Float
            GlowThickness
            Artist
            0.015
            [0.0 10.0]
    }

    PackingDef PosNormUV0
    {
        PD_Stream   0
            PDP_Position    0   PDT_Float3
            PDP_Normal      1   PDT_Float3
            PDP_TexCoord0   2   PDT_Float2
    }

    Implementation ToonShadingWithOutlineWithGlow
    {
        "This implementation requires hardware that supports
        vertex shader v1.1 and pixel shader v1.1."

        Requirements
        {
            VSVersion   = v1.1
            UserVersion = v0.0
            PSVersion   = v1.1
            UsesNIRenderState = true
        }

        PackingDef  PosNormUV0

        Pass Transfer
        {
            VSProgram   "ToonShadingWithOutline.vsh"

            VS_Constantmap
            {
                CM_Defined      WorldViewProjTranspose  0       0
                CM_Object       Light1  ModelDirection  4
                CM_Object       Light2  ModelDirection  5  
                CM_Object       Light1  Diffuse         6
                CM_Object       Light2  Diffuse         7  
                CM_Constant     Zoze                    8   1   0.0,1.0,0.0,0.0
                CM_Constant     YUVConversion           9   1   0.299, 0.587, 0.114, 1.0
                CM_Defined      MaterialDiffuse         10      0
                CM_Defined      InvWorldTranspose       11      0
                CM_Defined      InvWorldViewTranspose   15      0
            }

            Sampler 0   BaseMapSampler
            {
                TSS_Texture     = NTM_Base
                TSAMP_AddressU  = TADDR_Wrap
                TSAMP_AddressV  = TADDR_Wrap
                TSAMP_AddressW  = TADDR_Wrap
                TSAMP_MagFilter    = TEXF_Linear
                TSAMP_MinFilter    = TEXF_Linear
                TSAMP_MipFilter    = TEXF_Linear
            }
            Sampler 1   ToonRamp
            {
                TSS_Texture     = <ToonRamp>
                TSAMP_AddressU  = TADDR_Clamp
                TSAMP_AddressV  = TADDR_Clamp
                TSAMP_AddressW  = TADDR_Clamp
                TSAMP_MagFilter    = TEXF_Linear
                TSAMP_MinFilter    = TEXF_Linear
                TSAMP_MipFilter    = TEXF_None
            }

            PSProgram   "ToonShadingWithOutline.psh"

            PS_Constantmap
            {
                CM_Attribute    outlineColor            1   1   0
                CM_Attribute    outlineThickness        2   1   0
            }
        }
        
        Pass Glow
        {
            RenderStates
            {
                AlphaBlendEnable    = true
                SrcBlend            = One
                DestBlend           = One
                ZEnable             =   true
                ZWriteEnable        = false
            
            }
            VSProgram   "Glow.vsh"

            VS_Constantmap
            {
                CM_Defined      ProjectionTranspose   0       0
                CM_Defined      WorldViewTranspose   4       0
                CM_Attribute    GlowColor            7  1   0
                CM_Attribute    GlowAmbient            8  1   0
                CM_Attribute    GlowThickness        9   1   0
            }
          
            Stage 0 T1Stage
            {
                TSS_ColorOp     = TOP_SelectArg1
                TSS_ColorArg1   = TA_Diffuse
                TSS_AlphaOp     = TOP_SelectArg1
                TSS_AlphaArg1   = TA_Diffuse
            }
        }
    }
}
