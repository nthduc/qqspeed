/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

#ifndef OV_RES_H
#define OV_RES_H

/* Define Macros. */

#define RES_ID_ARRAY                             	1
#define RES_VERSION                              	1
#define RES_MAGIC                                	21862
#define RES_MAX_NAME_LEN                         	32
#define RES_MAX_BIRTH_MAP                        	16
#define RES_MAX_CHARGE_MAP                       	16
#define RES_MAX_LDESC_LEN                        	256
#define RES_TIP_DESC_LEN                         	512
#define RES_MAX_DESC_LEN                         	128
#define RES_MAX_DIALOG_LEN                       	64
#define RES_MAX_HINT_LEN                         	128
#define RES_MAX_RANDOM_ENTRIES                   	10
#define RES_MAX_DROPITEMS                        	32
#define RES_SUB_UNKNOWN                          	0
#define RES_SUB_SYS                              	1
#define RES_SUB_MON                              	2
#define RES_SUB_MAKE                             	3
#define RES_SUB_WORK                             	4
#define RES_SUB_TASK                             	5
#define RES_SUB_ITEM                             	6
#define RES_SUB_REPAIR                           	7
#define RES_SUB_TRANS                            	8
#define RES_SUB_NPCDEAL                          	9
#define RES_SUB_EXCHG                            	10
#define RES_SUB_SHOP                             	11
#define RES_SUB_MAIL                             	12
#define RES_SUB_STASH                            	13
#define RES_SUB_FAMILY                           	14
#define RES_SUB_CONSIGN                          	15
#define RES_SUB_ENCHASE                          	16
#define RES_SUB_ACT                              	17
#define RES_SUB_GM                               	18
#define RES_SUB_PK                               	19
#define RES_SUB_HAIR                             	20
#define RES_SUB_SKILL                            	21
#define RES_SUB_STEAL                            	22
#define RES_SUB_MP                               	23
#define RES_SUB_PET                              	24
#define RES_SUB_PICKDROP                         	25
#define RES_SUB_WEAR                             	26
#define RES_SUB_MONKILL                          	27
#define RES_SUB_SPLIT                            	28
#define RES_SUB_LOCK                             	29
#define RES_SUB_CURMAX                           	30
#define RES_SUB_MAX                              	32
#define RES_MAX_FORGE_LEVEL                      	10
#define RES_MAX_HOLES                            	5
#define RES_MAX_PRACTISE_LEVEL                   	32
#define RES_CUR_PRACTISE_LEVEL                   	10
#define RES_MAX_PRACTISE_SKILL                   	32
#define RES_MAX_PRACTISE_NAME                    	16
#define RES_MAX_INITSKILL                        	8
#define RES_MAX_LIFESKILL_GAIN                   	16
#define RES_MAX_LIFESKILL_NAME_LEN               	16
#define RES_LIFESKILL_MIN                        	10
#define RES_LIFESKILL_MINE                       	10
#define RES_LIFESKILL_FISH                       	11
#define RES_LIFESKILL_LUMBER                     	12
#define RES_LIFESKILL_HERB                       	13
#define RES_LIFESKILL_MAX                        	50
#define RES_TYPE_TRAP                            	100
#define RES_MAX_PET_EAT                          	6
#define RES_MAX_PET_NICK_LEN                     	16
#define RES_CUR_PET_NICK_LEN                     	12
#define RES_MAX_FAM_POSNAME_LEN                  	16
#define RES_CUR_FAM_POSNAME_LEN                  	12
#define RES_MAX_LEVEL1_LEN                       	32
#define RES_MAX_LEVEL2_LEN                       	64
#define RES_MAX_HELP_LEN                         	1024
#define RES_MAX_PET_INIT_SKILL                   	6
#define RES_MAX_REQUIRE                          	4
#define RES_MAX_MUSIC_LEN                        	16
#define RES_MAX_ACTION_SKILL                     	16
#define RES_MAX_ACTION_ITEM                      	16
#define RES_MAX_AVATAR_LEN                       	16
#define RES_SCRIPT_LEN                           	16
#define RES_MAX_PSKILL                           	2
#define RES_MAX_HSKILL                           	2
#define RES_MAX_ASKILL                           	4
#define RES_ATKTYPE_NEAR                         	0
#define RES_ATKTYPE_FAR                          	1
#define RES_CLASS_WEAPON                         	0
#define RES_CLASS_DRESS                          	1
#define RES_CLASS_COLLECT                        	2
#define RES_CLASS_EXPEND                         	3
#define RES_CLASS_MONEY                          	4
#define RES_SCRIPT_NAME_LEN                      	32
#define RES_MAX_SELL_ENTRY                       	120
#define RES_MAX_EMOTION                          	16
#define RES_MAX_CARD_COND                        	4
#define RES_ARM_BARHAND                          	0
#define RES_ARM_SPEAR                            	1
#define RES_ARM_SINGLESWORD                      	2
#define RES_ARM_DUALSWORD                        	4
#define RES_ARM_SWORD                            	6
#define RES_ARM_DAGGER                           	8
#define RES_ARM_STAFF                            	16
#define RES_ARM_THROW                            	32
#define RES_ARM_MAX                              	100
#define RES_TYPE_CARD                            	100
#define RES_MAX_EXCESUIT_ARM_NUM                 	24
#define RES_MAX_EXCESUIT_ATTR_NUM                	12
#define RES_MAX_SKILL_ATTR                       	4
#define RES_MAX_SKILL_SPEC                       	4
#define RES_MAX_SKILL_DEPEND                     	4
#define RES_MAX_SKILL_EXCEPT                     	2
#define RES_SEX_MAN                              	1
#define RES_SEX_WOMAN                            	2
#define RES_TYPE_STR                             	1
#define RES_TYPE_VIT                             	2
#define RES_TYPE_INT                             	3
#define RES_TYPE_MAX                             	6
#define RES_MAX_TRANS_ENTRY                      	16
#define RES_MAX_PERCENT                          	10000
#define RES_MIN_PERCENT                          	-10000
#define RES_MAX_MATERIAL                         	5
#define RES_MAX_EXCEPT                           	80
#define RES_MAX_CARD_RESULT                      	4
#define RES_MAX_ZONE_RESULT                      	128
#define RES_MAX_SYMBOL                           	8
#define RES_UNIT_NUM                             	0
#define RES_UNIT_PERCENT                         	1
#define RES_UNIT_MSEC                            	2
#define RES_UNIT_SEC                             	3
#define RES_UNIT_LEVEL                           	4
#define RES_UNIT_TENTHOUSAND                     	5
#define RES_UNIT_PIXEL                           	6
#define RES_SKILL_ATTACK_NONE                    	0
#define RES_SKILL_ATTACK_PHYS                    	1
#define RES_SKILL_ATTACK_MAGIC                   	2
#define RES_SKILL_TARGET                         	1
#define RES_SKILL_RANGE                          	2
#define RES_SKILL_STRONG                         	17
#define RES_SKILL_PASSIVE                        	18
#define RES_RANGE_POINT                          	0
#define RES_RANGE_RECT                           	1
#define RES_RANGE_CIRCLE                         	2
#define RES_RANGE_ARC                            	3
#define RES_SKILL_SELF                           	1
#define RES_SKILL_TEAM                           	3
#define RES_SKILL_ENEMY                          	4
#define RES_SKILL_LORD                           	8
#define RES_SKILL_PET                            	16
#define RES_SKILL_NOTARGET                       	32
#define RES_SKILL_ALL                            	63
#define RES_MAX_TITLE_ENTRY                      	16
#define RES_CUR_TITLE_ENTRY                      	11
#define RES_PROF_NEWBIE                          	0
#define RES_PROF_WARRIOR                         	1
#define RES_PROF_SWORDMAN                        	2
#define RES_PROF_STABBER                         	3
#define RES_PROF_DRUGGIST                        	4
#define RES_PROF_MAGICIAN                        	5
#define RES_MAX_PROF                             	6
#define RES_CAT_UNKNOWN                          	0
#define RES_CAT_FACE                             	1
#define RES_CAT_HAT                              	2
#define RES_CAT_NECKLACE                         	3
#define RES_CAT_WEAPON                           	4
#define RES_CAT_SHIELD                           	5
#define RES_CAT_GLOVE                            	6
#define RES_CAT_RING                             	7
#define RES_CAT_DRESS                            	8
#define RES_CAT_SHOE                             	9
#define RES_CAT_BAG                              	10
#define RES_CAT_PET                              	11
#define RES_CAT_FLYER                            	12
#define RES_CAT_DUALWEAPON                       	13
#define RES_DFT_SUITID                           	2801
#define RES_BASE_EXCEPT_SUITID                   	9400
#define RES_MAX_REFINE_RESULT                    	4
#define RES_MAX_TRAP_RESULT                      	8
#define RES_MAX_SKILL_LEVEL                      	99
#define RES_CUR_SKILL_LEVEL                      	5
#define RES_MAX_SKILL_SUIT                       	16
#define RES_MAX_SKILL_RESULT                     	8
#define RES_MAX_EXCEPT_LEVEL                     	64
#define RES_CUR_EXCEPT_LEVEL                     	20
#define RES_MAX_EXCEPT_RESULT                    	4
#define RES_EXCEPT_MUTABLE                       	0
#define RES_EXCEPT_COEXIST                       	1
#define RES_EXCEPT_COUNTERACT                    	2
#define RES_EXCEPT_REPLACE                       	3
#define RES_SCENE_NORMAL                         	0
#define RES_SCENE_PICK                           	1
#define RES_SCENE_ENEMY                          	2
#define RES_SCENE_ATTACK                         	3
#define RES_SCENE_BEHIT                          	4
#define RES_SCENE_DEFEAT                         	5
#define RES_SCENE_DIE                            	6
#define RES_SCENE_RUNAWAY                        	7
#define RES_EXCEPT_SPIRIT                        	0
#define RES_EXCEPT_POISON                        	1
#define RES_EXCEPT_COMA                          	2
#define RES_EXCEPT_SILENCE                       	3
#define RES_EXCEPT_ICE                           	4
#define RES_EXCEPT_STONE                         	5
#define RES_EXCEPT_WEAK                          	6
#define RES_EXCEPT_MAGIC_DOWN                    	7
#define RES_EXCEPT_BLINK                         	8
#define RES_EXCEPT_SPEED_DOWN                    	9
#define RES_EXCEPT_ATTACK_REBOUND                	10
#define RES_EXCEPT_MAGIC_REBOUND                 	11
#define RES_EXCEPT_IRON                          	12
#define RES_EXCEPT_FRENZY                        	13
#define RES_EXCEPT_STRONG                        	14
#define RES_EXCEPT_MAGIC_UP                      	15
#define RES_EXCEPT_SPEED_UP                      	16
#define RES_EXCEPT_SMART                         	17
#define RES_EXCEPT_POISONIT                      	18
#define RES_EXCEPT_DEFADD                        	19
#define RES_EXCEPT_ASPDADD                       	20
#define RES_EXCEPT_HURTABSORB                    	21
#define RES_EXCEPT_NOBAD                         	22
#define RES_EXCEPT_ADDHP                         	23
#define RES_EXCEPT_ADDSP                         	24
#define RES_EXCEPT_KILL                          	25
#define RES_EXCEPT_CENTRALIZE                    	26
#define RES_EXCEPT_BURST                         	27
#define RES_EXCEPT_REAL                          	28
#define RES_EXCEPT_NOGOOD                        	29
#define RES_EXCEPT_SERVER                        	30
#define RES_EXCEPT_LIFEABSORB                    	30
#define RES_EXCEPT_MAGICABSORB                   	31
#define RES_EXCEPT_HIDDEN                        	32
#define RES_EXCEPT_COUNTERATTACK                 	33
#define RES_EXCEPT_STAMP                         	34
#define RES_EXCEPT_PK                            	35
#define RES_EXCEPT_BURN                          	36
#define RES_EXCEPT_FIRESHIELD                    	37
#define RES_EXCEPT_ICESHIELD                     	38
#define RES_EXCEPT_DRESSING                      	39
#define RES_TARGET_SELF                          	0
#define RES_TARGET_PEER                          	1
#define RES_FORMAT_MAX                           	1
#define RES_FORMAT_ZERO                          	2
#define RES_FORMAT_MAGREBOUND                    	3
#define RES_FORMAT_ATKREBOUND                    	4
#define RES_FORMAT_HPABSORB                      	5
#define RES_FORMAT_SPABSORB                      	6
#define RES_FORMAT_DEAD                          	7
#define RES_FORMAT_ATK2HP                        	8
#define RES_FORMAT_SP2HURT                       	9
#define RES_FORMAT_STEAL                         	10
#define RES_FORMAT_HURT                          	11
#define RES_FORMAT_HURTREBOUND                   	12
#define RES_FORMAT_ATK2SP                        	13
#define RES_FORMAT_ATK                           	14
#define RES_FORMAT_DIST                          	15
#define RES_RACE_ATK_START                       	1
#define RES_RACE_NONE                            	0
#define RES_RACE_WATER                           	1
#define RES_RACE_EARTH                           	2
#define RES_RACE_FIRE                            	3
#define RES_RACE_WIND                            	4
#define RES_RACE_THUNDER                         	5
#define RES_RACE_SAGE                            	6
#define RES_RACE_DARK                            	7
#define RES_RACE_ATK_END                         	8
#define RES_RACE_CLS_START                       	8
#define RES_RACE_DRAGON                          	8
#define RES_RACE_INSECT                          	9
#define RES_RACE_MACHINE                         	10
#define RES_RACE_IMMORTAL                        	11
#define RES_RACE_TERRAN                          	12
#define RES_RACE_ANIMAL                          	13
#define RES_RACE_PLANT                           	14
#define RES_RACE_AQUATIC                         	15
#define RES_RACE_ANGEL                           	16
#define RES_RACE_GHOST                           	17
#define RES_RACE_CLS_END                         	18
#define RES_MAX_RACE                             	20
#define RES_WORK_IDLE                            	0
#define RES_WORK_CLEAN                           	1
#define RES_WORK_WASH                            	2
#define RES_WORK_HOMEWORK                        	3
#define RES_WORK_SALE                            	4
#define RES_WORK_INCHARGE                        	5
#define RES_WORK_ARRANGE                         	6
#define RES_WORK_GUARD                           	7
#define RES_WORK_MAKE                            	8
#define RES_WORK_REFINE                          	9
#define RES_WORK_MINE                            	10
#define RES_WORK_FISH                            	11
#define RES_BONUS_MONEY                          	1
#define RES_BONUS_ITEM                           	2
#define RES_BONUS_EXP                            	3
#define RES_BONUS_HONOR                          	4
#define RES_MAX_WORK_BONUS                       	10
#define RES_MAX_WORK_DESC_LEN                    	32
#define RES_MAX_MP_BONUS                         	4
#define MAX_PRENTICE_NUMBER                      	100000
#define MAX_MORAL_TITLE_LEN                      	32
#define RES_STATUS_MIN                           	0
#define RES_STATUS_STAND                         	0
#define RES_STATUS_MOVE                          	1
#define RES_STATUS_SEAT                          	2
#define RES_STATUS_DEAD                          	3
#define RES_STATUS_ATTACK                        	4
#define RES_STATUS_BEATTACK                      	5
#define RES_STATUS_SING                          	6
#define RES_STATUS_WORK                          	7
#define RES_STATUS_MAKE                          	8
#define RES_STATUS_REFINE                        	9
#define RES_STATUS_NPCDLG                        	10
#define RES_STATUS_NPCDEAL                       	11
#define RES_STATUS_PLAYERDEAL                    	12
#define RES_STATUS_PLAYERSHOP                    	13
#define RES_STATUS_STASH                         	14
#define RES_STATUS_HORSE                         	15
#define RES_STATUS_TRANS                         	16
#define RES_STATUS_MAX                           	17
#define RES_ACTION_MIN                           	0
#define RES_ACTION_STAND                         	0
#define RES_ACTION_MOVE                          	1
#define RES_ACTION_SEAT                          	2
#define RES_ACTION_DEAD                          	3
#define RES_ACTION_ATTACK                        	4
#define RES_ACTION_BEATTACK                      	5
#define RES_ACTION_SING                          	6
#define RES_ACTION_USEITEM                       	7
#define RES_ACTION_PICKITEM                      	8
#define RES_ACTION_DROPITEM                      	9
#define RES_ACTION_WEARARM                       	10
#define RES_ACTION_WORK                          	11
#define RES_ACTION_MAKE                          	12
#define RES_ACTION_REFINE                        	13
#define RES_ACTION_NPCDLG                        	14
#define RES_ACTION_NPCDEAL                       	15
#define RES_ACTION_PLAYERDEAL                    	16
#define RES_ACTION_PLAYERSHOP                    	17
#define RES_ACTION_HORSE                         	18
#define RES_ACTION_TRANS                         	19
#define RES_ACTION_CONSIGN                       	20
#define RES_ACTION_MAIL                          	21
#define RES_ACTION_LOCK                          	22
#define RES_ACTION_MAX                           	23
#define RES_ACTION_NO                            	0
#define RES_ACTION_YES                           	1
#define RES_ACTION_SWITCH                        	2
#define RES_ACTION_SPEC                          	3
#define RES_ACTION_NA                            	10
#define RES_MALE                                 	1
#define RES_FEMALE                               	2
#define RES_NEUTER                               	0
#define RES_PET_GRASS                            	1
#define RES_PET_FLESH                            	2
#define RES_PET_MIX                              	3
#define RES_MAX_PET_LEARNNO                      	6
#define RES_PET_MALE                             	1
#define RES_PET_FEMALE                           	2
#define RES_PET_NEUTER                           	3
#define RES_PET_USESKILL                         	1
#define RES_PET_PREPSKILLSUCC                    	2
#define RES_PET_CANCELSKILL                      	3
#define RES_PET_GAINSKILL                        	4
#define RES_PET_BEHIT                            	5
#define RES_PET_OVERWEIGHT                       	6
#define RES_PET_STARVE                           	7
#define RES_PET_TRUST                            	8
#define RES_PET_EAT                              	9
#define RES_PET_ADDHP                            	10
#define RES_PET_ADDSP                            	11
#define RES_PET_LEVELUP                          	12
#define RES_PET_LEVELFULL                        	13
#define RES_PET_SKILLFULL                        	14
#define RES_PET_CHGNICK                          	15
#define RES_PET_CHG                              	16
#define RES_PET_SPECIAL                          	17
#define RES_PET_RUN                              	18
#define RES_PET_STAND                            	19
#define RES_PET_STAT_FILL                        	1
#define RES_PET_STAT_HALFFILL                    	2
#define RES_PET_STAT_STARVE                      	3
#define RES_PET_STAT_HALFSTARVE                  	4
#define RES_PET_STAT_FULLHP                      	1
#define RES_PET_STAT_NONFULLHP                   	0
#define RES_PET_STAT_FULLSP                      	1
#define RES_PET_STAT_NONFULLSP                   	0
#define RES_PET_STAT_GAINSKILL                   	1
#define RES_PET_STAT_NOGAINSKILL                 	0
#define RES_PET_STAT_CHGSUCC                     	1
#define RES_PET_STAT_CHGSTOP                     	2
#define RES_MAX_PET_SPEAKS                       	4
#define RES_MAX_PET_SPEAK_LEN                    	64
#define RES_MAX_PRETASK_NUM                      	5
#define RES_MAX_TRACE_ITEM                       	5
#define RES_MAX_TRACE_MONSTER                    	5
#define MAX_HURT_AND_DEF_NUM                     	128
#define RES_DEF_NAME_LEN                         	64
#define MAX_DEF_ATTR_COL                         	64


#ifdef __cplusplus
extern "C" {
#endif

/* Structs/unions prototype. */

struct tagResHead;
typedef struct tagResHead                          	RESHEAD;
typedef struct tagResHead                          	*LPRESHEAD;

struct tagResScriptIndex;
typedef struct tagResScriptIndex                   	RESSCRIPTINDEX;
typedef struct tagResScriptIndex                   	*LPRESSCRIPTINDEX;

struct tagResCond;
typedef struct tagResCond                          	RESCOND;
typedef struct tagResCond                          	*LPRESCOND;

struct tagResResult;
typedef struct tagResResult                        	RESRESULT;
typedef struct tagResResult                        	*LPRESRESULT;

struct tagResSkillResult;
typedef struct tagResSkillResult                   	RESSKILLRESULT;
typedef struct tagResSkillResult                   	*LPRESSKILLRESULT;

struct tagZoneResult;
typedef struct tagZoneResult                       	ZONERESULT;
typedef struct tagZoneResult                       	*LPZONERESULT;

struct tagZoneResultList;
typedef struct tagZoneResultList                   	ZONERESULTLIST;
typedef struct tagZoneResultList                   	*LPZONERESULTLIST;

struct tagZoneTimedExcept;
typedef struct tagZoneTimedExcept                  	ZONETIMEDEXCEPT;
typedef struct tagZoneTimedExcept                  	*LPZONETIMEDEXCEPT;

struct tagZoneTimedExceptList;
typedef struct tagZoneTimedExceptList              	ZONETIMEDEXCEPTLIST;
typedef struct tagZoneTimedExceptList              	*LPZONETIMEDEXCEPTLIST;

struct tagResArmAttr;
typedef struct tagResArmAttr                       	RESARMATTR;
typedef struct tagResArmAttr                       	*LPRESARMATTR;

struct tagResArmHole;
typedef struct tagResArmHole                       	RESARMHOLE;
typedef struct tagResArmHole                       	*LPRESARMHOLE;

struct tagResArmLevel;
typedef struct tagResArmLevel                      	RESARMLEVEL;
typedef struct tagResArmLevel                      	*LPRESARMLEVEL;

struct tagResArm;
typedef struct tagResArm                           	RESARM;
typedef struct tagResArm                           	*LPRESARM;

struct tagResArmTab;
typedef struct tagResArmTab                        	RESARMTAB;
typedef struct tagResArmTab                        	*LPRESARMTAB;

struct tagResItem;
typedef struct tagResItem                          	RESITEM;
typedef struct tagResItem                          	*LPRESITEM;

struct tagResItemTab;
typedef struct tagResItemTab                       	RESITEMTAB;
typedef struct tagResItemTab                       	*LPRESITEMTAB;

struct tagResDesc;
typedef struct tagResDesc                          	RESDESC;
typedef struct tagResDesc                          	*LPRESDESC;

struct tagResDescTab;
typedef struct tagResDescTab                       	RESDESCTAB;
typedef struct tagResDescTab                       	*LPRESDESCTAB;

struct tagResExceSuitArm;
typedef struct tagResExceSuitArm                   	RESEXCESUITARM;
typedef struct tagResExceSuitArm                   	*LPRESEXCESUITARM;

struct tagResExceSuitAttr;
typedef struct tagResExceSuitAttr                  	RESEXCESUITATTR;
typedef struct tagResExceSuitAttr                  	*LPRESEXCESUITATTR;

struct tagResExceSuit;
typedef struct tagResExceSuit                      	RESEXCESUIT;
typedef struct tagResExceSuit                      	*LPRESEXCESUIT;

struct tagResExceSuitTab;
typedef struct tagResExceSuitTab                   	RESEXCESUITTAB;
typedef struct tagResExceSuitTab                   	*LPRESEXCESUITTAB;

struct tagResRandomEntry;
typedef struct tagResRandomEntry                   	RESRANDOMENTRY;
typedef struct tagResRandomEntry                   	*LPRESRANDOMENTRY;

struct tagResRandom;
typedef struct tagResRandom                        	RESRANDOM;
typedef struct tagResRandom                        	*LPRESRANDOM;

struct tagResRandomTab;
typedef struct tagResRandomTab                     	RESRANDOMTAB;
typedef struct tagResRandomTab                     	*LPRESRANDOMTAB;

struct tagResDrop;
typedef struct tagResDrop                          	RESDROP;
typedef struct tagResDrop                          	*LPRESDROP;

struct tagResMonASkill;
typedef struct tagResMonASkill                     	RESMONASKILL;
typedef struct tagResMonASkill                     	*LPRESMONASKILL;

struct tagResMonHSkill;
typedef struct tagResMonHSkill                     	RESMONHSKILL;
typedef struct tagResMonHSkill                     	*LPRESMONHSKILL;

struct tagResMonPSkill;
typedef struct tagResMonPSkill                     	RESMONPSKILL;
typedef struct tagResMonPSkill                     	*LPRESMONPSKILL;

struct tagResMonster;
typedef struct tagResMonster                       	RESMONSTER;
typedef struct tagResMonster                       	*LPRESMONSTER;

struct tagResMonsterTab;
typedef struct tagResMonsterTab                    	RESMONSTERTAB;
typedef struct tagResMonsterTab                    	*LPRESMONSTERTAB;

struct tagResCMon;
typedef struct tagResCMon                          	RESCMON;
typedef struct tagResCMon                          	*LPRESCMON;

struct tagResCMonTab;
typedef struct tagResCMonTab                       	RESCMONTAB;
typedef struct tagResCMonTab                       	*LPRESCMONTAB;

struct tagResSellEntry;
typedef struct tagResSellEntry                     	RESSELLENTRY;
typedef struct tagResSellEntry                     	*LPRESSELLENTRY;

struct tagResSellList;
typedef struct tagResSellList                      	RESSELLLIST;
typedef struct tagResSellList                      	*LPRESSELLLIST;

struct tagResSellListTab;
typedef struct tagResSellListTab                   	RESSELLLISTTAB;
typedef struct tagResSellListTab                   	*LPRESSELLLISTTAB;

struct tagResSkillSuit;
typedef struct tagResSkillSuit                     	RESSKILLSUIT;
typedef struct tagResSkillSuit                     	*LPRESSKILLSUIT;

struct tagResSkillAttr;
typedef struct tagResSkillAttr                     	RESSKILLATTR;
typedef struct tagResSkillAttr                     	*LPRESSKILLATTR;

struct tagResSkillSpec;
typedef struct tagResSkillSpec                     	RESSKILLSPEC;
typedef struct tagResSkillSpec                     	*LPRESSKILLSPEC;

struct tagResSkillDepend;
typedef struct tagResSkillDepend                   	RESSKILLDEPEND;
typedef struct tagResSkillDepend                   	*LPRESSKILLDEPEND;

struct tagResSkillExcept;
typedef struct tagResSkillExcept                   	RESSKILLEXCEPT;
typedef struct tagResSkillExcept                   	*LPRESSKILLEXCEPT;

struct tagResSkill;
typedef struct tagResSkill                         	RESSKILL;
typedef struct tagResSkill                         	*LPRESSKILL;

struct tagResSkillTab;
typedef struct tagResSkillTab                      	RESSKILLTAB;
typedef struct tagResSkillTab                      	*LPRESSKILLTAB;

struct tagResSkillDesc;
typedef struct tagResSkillDesc                     	RESSKILLDESC;
typedef struct tagResSkillDesc                     	*LPRESSKILLDESC;

struct tagResSkillDescTab;
typedef struct tagResSkillDescTab                  	RESSKILLDESCTAB;
typedef struct tagResSkillDescTab                  	*LPRESSKILLDESCTAB;

struct tagResTitleEntry;
typedef struct tagResTitleEntry                    	RESTITLEENTRY;
typedef struct tagResTitleEntry                    	*LPRESTITLEENTRY;

struct tagResTitle;
typedef struct tagResTitle                         	RESTITLE;
typedef struct tagResTitle                         	*LPRESTITLE;

struct tagResTitleTab;
typedef struct tagResTitleTab                      	RESTITLETAB;
typedef struct tagResTitleTab                      	*LPRESTITLETAB;

struct tagResHonor;
typedef struct tagResHonor                         	RESHONOR;
typedef struct tagResHonor                         	*LPRESHONOR;

struct tagResHonorTab;
typedef struct tagResHonorTab                      	RESHONORTAB;
typedef struct tagResHonorTab                      	*LPRESHONORTAB;

struct tagResPreTask;
typedef struct tagResPreTask                       	RESPRETASK;
typedef struct tagResPreTask                       	*LPRESPRETASK;

struct tagResTaskTraceItem;
typedef struct tagResTaskTraceItem                 	RESTASKTRACEITEM;
typedef struct tagResTaskTraceItem                 	*LPRESTASKTRACEITEM;

struct tagResTaskTraceMonster;
typedef struct tagResTaskTraceMonster              	RESTASKTRACEMONSTER;
typedef struct tagResTaskTraceMonster              	*LPRESTASKTRACEMONSTER;

struct tagResTask;
typedef struct tagResTask                          	RESTASK;
typedef struct tagResTask                          	*LPRESTASK;

struct tagResTaskTab;
typedef struct tagResTaskTab                       	RESTASKTAB;
typedef struct tagResTaskTab                       	*LPRESTASKTAB;

struct tagResHint;
typedef struct tagResHint                          	RESHINT;
typedef struct tagResHint                          	*LPRESHINT;

struct tagResHintTab;
typedef struct tagResHintTab                       	RESHINTTAB;
typedef struct tagResHintTab                       	*LPRESHINTTAB;

struct tagResDialog;
typedef struct tagResDialog                        	RESDIALOG;
typedef struct tagResDialog                        	*LPRESDIALOG;

struct tagResDialogTab;
typedef struct tagResDialogTab                     	RESDIALOGTAB;
typedef struct tagResDialogTab                     	*LPRESDIALOGTAB;

struct tagResEmotion;
typedef struct tagResEmotion                       	RESEMOTION;
typedef struct tagResEmotion                       	*LPRESEMOTION;

struct tagResRatio;
typedef struct tagResRatio                         	RESRATIO;
typedef struct tagResRatio                         	*LPRESRATIO;

struct tagResRatioTab;
typedef struct tagResRatioTab                      	RESRATIOTAB;
typedef struct tagResRatioTab                      	*LPRESRATIOTAB;

struct tagResSymbol;
typedef struct tagResSymbol                        	RESSYMBOL;
typedef struct tagResSymbol                        	*LPRESSYMBOL;

struct tagResSymbolTab;
typedef struct tagResSymbolTab                     	RESSYMBOLTAB;
typedef struct tagResSymbolTab                     	*LPRESSYMBOLTAB;

struct tagResMaterial;
typedef struct tagResMaterial                      	RESMATERIAL;
typedef struct tagResMaterial                      	*LPRESMATERIAL;

struct tagResMake;
typedef struct tagResMake                          	RESMAKE;
typedef struct tagResMake                          	*LPRESMAKE;

struct tagResMakeTab;
typedef struct tagResMakeTab                       	RESMAKETAB;
typedef struct tagResMakeTab                       	*LPRESMAKETAB;

struct tagResRefine;
typedef struct tagResRefine                        	RESREFINE;
typedef struct tagResRefine                        	*LPRESREFINE;

struct tagResRefineTab;
typedef struct tagResRefineTab                     	RESREFINETAB;
typedef struct tagResRefineTab                     	*LPRESREFINETAB;

struct tagResExceptOverlay;
typedef struct tagResExceptOverlay                 	RESEXCEPTOVERLAY;
typedef struct tagResExceptOverlay                 	*LPRESEXCEPTOVERLAY;

struct tagResExceptOverlayTab;
typedef struct tagResExceptOverlayTab              	RESEXCEPTOVERLAYTAB;
typedef struct tagResExceptOverlayTab              	*LPRESEXCEPTOVERLAYTAB;

struct tagResSpecResult;
typedef struct tagResSpecResult                    	RESSPECRESULT;
typedef struct tagResSpecResult                    	*LPRESSPECRESULT;

struct tagResExceptLevel;
typedef struct tagResExceptLevel                   	RESEXCEPTLEVEL;
typedef struct tagResExceptLevel                   	*LPRESEXCEPTLEVEL;

struct tagResExceptDetail;
typedef struct tagResExceptDetail                  	RESEXCEPTDETAIL;
typedef struct tagResExceptDetail                  	*LPRESEXCEPTDETAIL;

struct tagResExceptDetailTab;
typedef struct tagResExceptDetailTab               	RESEXCEPTDETAILTAB;
typedef struct tagResExceptDetailTab               	*LPRESEXCEPTDETAILTAB;

struct tagResCard;
typedef struct tagResCard                          	RESCARD;
typedef struct tagResCard                          	*LPRESCARD;

struct tagResCardTab;
typedef struct tagResCardTab                       	RESCARDTAB;
typedef struct tagResCardTab                       	*LPRESCARDTAB;

struct tagResCoef;
typedef struct tagResCoef                          	RESCOEF;
typedef struct tagResCoef                          	*LPRESCOEF;

struct tagResCoefTab;
typedef struct tagResCoefTab                       	RESCOEFTAB;
typedef struct tagResCoefTab                       	*LPRESCOEFTAB;

struct tagResLevel;
typedef struct tagResLevel                         	RESLEVEL;
typedef struct tagResLevel                         	*LPRESLEVEL;

struct tagResLevelTab;
typedef struct tagResLevelTab                      	RESLEVELTAB;
typedef struct tagResLevelTab                      	*LPRESLEVELTAB;

struct tagResLevelUp;
typedef struct tagResLevelUp                       	RESLEVELUP;
typedef struct tagResLevelUp                       	*LPRESLEVELUP;

struct tagResLevelUpTab;
typedef struct tagResLevelUpTab                    	RESLEVELUPTAB;
typedef struct tagResLevelUpTab                    	*LPRESLEVELUPTAB;

struct tagResTrans;
typedef struct tagResTrans                         	RESTRANS;
typedef struct tagResTrans                         	*LPRESTRANS;

struct tagResTransTab;
typedef struct tagResTransTab                      	RESTRANSTAB;
typedef struct tagResTransTab                      	*LPRESTRANSTAB;

struct tagResTransRefEntry;
typedef struct tagResTransRefEntry                 	RESTRANSREFENTRY;
typedef struct tagResTransRefEntry                 	*LPRESTRANSREFENTRY;

struct tagResTransRef;
typedef struct tagResTransRef                      	RESTRANSREF;
typedef struct tagResTransRef                      	*LPRESTRANSREF;

struct tagResTransRefTab;
typedef struct tagResTransRefTab                   	RESTRANSREFTAB;
typedef struct tagResTransRefTab                   	*LPRESTRANSREFTAB;

struct tagResTime;
typedef struct tagResTime                          	RESTIME;
typedef struct tagResTime                          	*LPRESTIME;

struct tagResTimeTab;
typedef struct tagResTimeTab                       	RESTIMETAB;
typedef struct tagResTimeTab                       	*LPRESTIMETAB;

struct tagResDefense;
typedef struct tagResDefense                       	RESDEFENSE;
typedef struct tagResDefense                       	*LPRESDEFENSE;

struct tagResDefenseTab;
typedef struct tagResDefenseTab                    	RESDEFENSETAB;
typedef struct tagResDefenseTab                    	*LPRESDEFENSETAB;

struct tagResElement;
typedef struct tagResElement                       	RESELEMENT;
typedef struct tagResElement                       	*LPRESELEMENT;

struct tagResElementTab;
typedef struct tagResElementTab                    	RESELEMENTTAB;
typedef struct tagResElementTab                    	*LPRESELEMENTTAB;

struct tagWorkBonus;
typedef struct tagWorkBonus                        	WORKBONUS;
typedef struct tagWorkBonus                        	*LPWORKBONUS;

struct tagWork;
typedef struct tagWork                             	WORK;
typedef struct tagWork                             	*LPWORK;

struct tagWorkTab;
typedef struct tagWorkTab                          	WORKTAB;
typedef struct tagWorkTab                          	*LPWORKTAB;

struct tagMPBonus;
typedef struct tagMPBonus                          	MPBONUS;
typedef struct tagMPBonus                          	*LPMPBONUS;

struct tagSysBonusForMP;
typedef struct tagSysBonusForMP                    	SYSBONUSFORMP;
typedef struct tagSysBonusForMP                    	*LPSYSBONUSFORMP;

struct tagSysBonusForMPTab;
typedef struct tagSysBonusForMPTab                 	SYSBONUSFORMPTAB;
typedef struct tagSysBonusForMPTab                 	*LPSYSBONUSFORMPTAB;

struct tagBonusForMP;
typedef struct tagBonusForMP                       	BONUSFORMP;
typedef struct tagBonusForMP                       	*LPBONUSFORMP;

struct tagBonusForMPTab;
typedef struct tagBonusForMPTab                    	BONUSFORMPTAB;
typedef struct tagBonusForMPTab                    	*LPBONUSFORMPTAB;

struct tagMPMoral;
typedef struct tagMPMoral                          	MPMORAL;
typedef struct tagMPMoral                          	*LPMPMORAL;

struct tagMPMoralTab;
typedef struct tagMPMoralTab                       	MPMORALTAB;
typedef struct tagMPMoralTab                       	*LPMPMORALTAB;

struct tagMPLimitNum;
typedef struct tagMPLimitNum                       	MPLIMITNUM;
typedef struct tagMPLimitNum                       	*LPMPLIMITNUM;

struct tagMPLimitNumTab;
typedef struct tagMPLimitNumTab                    	MPLIMITNUMTAB;
typedef struct tagMPLimitNumTab                    	*LPMPLIMITNUMTAB;

struct tagResTip;
typedef struct tagResTip                           	RESTIP;
typedef struct tagResTip                           	*LPRESTIP;

struct tagResTipTab;
typedef struct tagResTipTab                        	RESTIPTAB;
typedef struct tagResTipTab                        	*LPRESTIPTAB;

struct tagResHelp;
typedef struct tagResHelp                          	RESHELP;
typedef struct tagResHelp                          	*LPRESHELP;

struct tagResHelpTab;
typedef struct tagResHelpTab                       	RESHELPTAB;
typedef struct tagResHelpTab                       	*LPRESHELPTAB;

struct tagResSkillID;
typedef struct tagResSkillID                       	RESSKILLID;
typedef struct tagResSkillID                       	*LPRESSKILLID;

struct tagResItemID;
typedef struct tagResItemID                        	RESITEMID;
typedef struct tagResItemID                        	*LPRESITEMID;

struct tagResSelfItemID;
typedef struct tagResSelfItemID                    	RESSELFITEMID;
typedef struct tagResSelfItemID                    	*LPRESSELFITEMID;

struct tagResAction;
typedef struct tagResAction                        	RESACTION;
typedef struct tagResAction                        	*LPRESACTION;

struct tagResActionTab;
typedef struct tagResActionTab                     	RESACTIONTAB;
typedef struct tagResActionTab                     	*LPRESACTIONTAB;

struct tagResInitSkill;
typedef struct tagResInitSkill                     	RESINITSKILL;
typedef struct tagResInitSkill                     	*LPRESINITSKILL;

struct tagResConfig;
typedef struct tagResConfig                        	RESCONFIG;
typedef struct tagResConfig                        	*LPRESCONFIG;

struct tagResConfigTab;
typedef struct tagResConfigTab                     	RESCONFIGTAB;
typedef struct tagResConfigTab                     	*LPRESCONFIGTAB;

struct tagResPerm;
typedef struct tagResPerm                          	RESPERM;
typedef struct tagResPerm                          	*LPRESPERM;

struct tagResPermTab;
typedef struct tagResPermTab                       	RESPERMTAB;
typedef struct tagResPermTab                       	*LPRESPERMTAB;

struct tagResPunish;
typedef struct tagResPunish                        	RESPUNISH;
typedef struct tagResPunish                        	*LPRESPUNISH;

struct tagResPunishTab;
typedef struct tagResPunishTab                     	RESPUNISHTAB;
typedef struct tagResPunishTab                     	*LPRESPUNISHTAB;

struct tagResPKPunish;
typedef struct tagResPKPunish                      	RESPKPUNISH;
typedef struct tagResPKPunish                      	*LPRESPKPUNISH;

struct tagResPKPunishTab;
typedef struct tagResPKPunishTab                   	RESPKPUNISHTAB;
typedef struct tagResPKPunishTab                   	*LPRESPKPUNISHTAB;

struct tagResMusic;
typedef struct tagResMusic                         	RESMUSIC;
typedef struct tagResMusic                         	*LPRESMUSIC;

struct tagResMusicTab;
typedef struct tagResMusicTab                      	RESMUSICTAB;
typedef struct tagResMusicTab                      	*LPRESMUSICTAB;

struct tagResRequire;
typedef struct tagResRequire                       	RESREQUIRE;
typedef struct tagResRequire                       	*LPRESREQUIRE;

struct tagResHairStyle;
typedef struct tagResHairStyle                     	RESHAIRSTYLE;
typedef struct tagResHairStyle                     	*LPRESHAIRSTYLE;

struct tagResHairStyleTab;
typedef struct tagResHairStyleTab                  	RESHAIRSTYLETAB;
typedef struct tagResHairStyleTab                  	*LPRESHAIRSTYLETAB;

struct tagResHairColor;
typedef struct tagResHairColor                     	RESHAIRCOLOR;
typedef struct tagResHairColor                     	*LPRESHAIRCOLOR;

struct tagResHairColorTab;
typedef struct tagResHairColorTab                  	RESHAIRCOLORTAB;
typedef struct tagResHairColorTab                  	*LPRESHAIRCOLORTAB;

struct tagResSound;
typedef struct tagResSound                         	RESSOUND;
typedef struct tagResSound                         	*LPRESSOUND;

struct tagResSoundTab;
typedef struct tagResSoundTab                      	RESSOUNDTAB;
typedef struct tagResSoundTab                      	*LPRESSOUNDTAB;

struct tagResPetSkillID;
typedef struct tagResPetSkillID                    	RESPETSKILLID;
typedef struct tagResPetSkillID                    	*LPRESPETSKILLID;

struct tagResPetSkillLearnNo;
typedef struct tagResPetSkillLearnNo               	RESPETSKILLLEARNNO;
typedef struct tagResPetSkillLearnNo               	*LPRESPETSKILLLEARNNO;

struct tagResPetSkillLearnNoTab;
typedef struct tagResPetSkillLearnNoTab            	RESPETSKILLLEARNNOTAB;
typedef struct tagResPetSkillLearnNoTab            	*LPRESPETSKILLLEARNNOTAB;

struct tagResPetEat;
typedef struct tagResPetEat                        	RESPETEAT;
typedef struct tagResPetEat                        	*LPRESPETEAT;

struct tagResPetGrow;
typedef struct tagResPetGrow                       	RESPETGROW;
typedef struct tagResPetGrow                       	*LPRESPETGROW;

struct tagResPetGrowTab;
typedef struct tagResPetGrowTab                    	RESPETGROWTAB;
typedef struct tagResPetGrowTab                    	*LPRESPETGROWTAB;

struct tagResPetLevelExp;
typedef struct tagResPetLevelExp                   	RESPETLEVELEXP;
typedef struct tagResPetLevelExp                   	*LPRESPETLEVELEXP;

struct tagResPetLevelExpTab;
typedef struct tagResPetLevelExpTab                	RESPETLEVELEXPTAB;
typedef struct tagResPetLevelExpTab                	*LPRESPETLEVELEXPTAB;

struct tagResNickGrow;
typedef struct tagResNickGrow                      	RESNICKGROW;
typedef struct tagResNickGrow                      	*LPRESNICKGROW;

struct tagResNickGrowTab;
typedef struct tagResNickGrowTab                   	RESNICKGROWTAB;
typedef struct tagResNickGrowTab                   	*LPRESNICKGROWTAB;

struct tagResFamLevel;
typedef struct tagResFamLevel                      	RESFAMLEVEL;
typedef struct tagResFamLevel                      	*LPRESFAMLEVEL;

struct tagResFamLevelTab;
typedef struct tagResFamLevelTab                   	RESFAMLEVELTAB;
typedef struct tagResFamLevelTab                   	*LPRESFAMLEVELTAB;

struct tagResFamLevelPerm;
typedef struct tagResFamLevelPerm                  	RESFAMLEVELPERM;
typedef struct tagResFamLevelPerm                  	*LPRESFAMLEVELPERM;

struct tagResFamLevelPermTab;
typedef struct tagResFamLevelPermTab               	RESFAMLEVELPERMTAB;
typedef struct tagResFamLevelPermTab               	*LPRESFAMLEVELPERMTAB;

struct tagResFamPosPerm;
typedef struct tagResFamPosPerm                    	RESFAMPOSPERM;
typedef struct tagResFamPosPerm                    	*LPRESFAMPOSPERM;

struct tagResFamPosPermTab;
typedef struct tagResFamPosPermTab                 	RESFAMPOSPERMTAB;
typedef struct tagResFamPosPermTab                 	*LPRESFAMPOSPERMTAB;

struct tagResFamStashUpd;
typedef struct tagResFamStashUpd                   	RESFAMSTASHUPD;
typedef struct tagResFamStashUpd                   	*LPRESFAMSTASHUPD;

struct tagResFamStashUpdTab;
typedef struct tagResFamStashUpdTab                	RESFAMSTASHUPDTAB;
typedef struct tagResFamStashUpdTab                	*LPRESFAMSTASHUPDTAB;

struct tagResFamPerm;
typedef struct tagResFamPerm                       	RESFAMPERM;
typedef struct tagResFamPerm                       	*LPRESFAMPERM;

struct tagResFamPermTab;
typedef struct tagResFamPermTab                    	RESFAMPERMTAB;
typedef struct tagResFamPermTab                    	*LPRESFAMPERMTAB;

struct tagResLifeSkillGain;
typedef struct tagResLifeSkillGain                 	RESLIFESKILLGAIN;
typedef struct tagResLifeSkillGain                 	*LPRESLIFESKILLGAIN;

struct tagResLifeSkill;
typedef struct tagResLifeSkill                     	RESLIFESKILL;
typedef struct tagResLifeSkill                     	*LPRESLIFESKILL;

struct tagResLifeSkillTab;
typedef struct tagResLifeSkillTab                  	RESLIFESKILLTAB;
typedef struct tagResLifeSkillTab                  	*LPRESLIFESKILLTAB;

struct tagResPetSpeak;
typedef struct tagResPetSpeak                      	RESPETSPEAK;
typedef struct tagResPetSpeak                      	*LPRESPETSPEAK;

struct tagResPetDlg;
typedef struct tagResPetDlg                        	RESPETDLG;
typedef struct tagResPetDlg                        	*LPRESPETDLG;

struct tagResPetDlgTab;
typedef struct tagResPetDlgTab                     	RESPETDLGTAB;
typedef struct tagResPetDlgTab                     	*LPRESPETDLGTAB;

struct tagResTrap;
typedef struct tagResTrap                          	RESTRAP;
typedef struct tagResTrap                          	*LPRESTRAP;

struct tagResTrapTab;
typedef struct tagResTrapTab                       	RESTRAPTAB;
typedef struct tagResTrapTab                       	*LPRESTRAPTAB;

struct tagResRollMsg;
typedef struct tagResRollMsg                       	RESROLLMSG;
typedef struct tagResRollMsg                       	*LPRESROLLMSG;

struct tagResRollMsgTab;
typedef struct tagResRollMsgTab                    	RESROLLMSGTAB;
typedef struct tagResRollMsgTab                    	*LPRESROLLMSGTAB;

struct tagResPractiseLevel;
typedef struct tagResPractiseLevel                 	RESPRACTISELEVEL;
typedef struct tagResPractiseLevel                 	*LPRESPRACTISELEVEL;

struct tagResPractise;
typedef struct tagResPractise                      	RESPRACTISE;
typedef struct tagResPractise                      	*LPRESPRACTISE;

struct tagResPractiseTab;
typedef struct tagResPractiseTab                   	RESPRACTISETAB;
typedef struct tagResPractiseTab                   	*LPRESPRACTISETAB;

struct tagResDefAttr;
typedef struct tagResDefAttr                       	RESDEFATTR;
typedef struct tagResDefAttr                       	*LPRESDEFATTR;

struct tagResHurtAndDef;
typedef struct tagResHurtAndDef                    	RESHURTANDDEF;
typedef struct tagResHurtAndDef                    	*LPRESHURTANDDEF;

struct tagResHurtAndDefTab;
typedef struct tagResHurtAndDefTab                 	RESHURTANDDEFTAB;
typedef struct tagResHurtAndDefTab                 	*LPRESHURTANDDEFTAB;



/* Define structs/unions. */

#pragma pack(1)

struct tagResHead
{
	int iMagic;                 
	int iVersion;               
	int iUnit;                  
	int iCount;                 
};

struct tagResScriptIndex
{
	char szName[RES_SCRIPT_NAME_LEN];
	char cScriptType;            
	short nPos;                   
};

struct tagResCond
{
	char cType;                  
};

struct tagResResult
{
	short nFormat;                
	char cOper;                  
	char cRes1;                  
	short nAttr;                  
	char cUnit;                  
	unsigned char bSucc;                  
	short nValue;                 
};

struct tagResSkillResult
{
	short nFormat;                
	char cOper;                  
	char cRes1;                  
	short nAttr;                  
	char cUnit;                  
	unsigned char bSucc;                  
	short nValue;                 
	char cUnitAdd;               
	unsigned char bSuccAdd;               
	short nValueAdd;              
	short nNeedSkill;             
	short nRes;                   
};

struct tagZoneResult
{
	RESCOND conds[RES_MAX_CARD_COND];
	RESRESULT stResult;               
};

struct tagZoneResultList
{
	char szImmune[RES_MAX_EXCEPT];
	int iCount;                 
	ZONERESULT results[RES_MAX_ZONE_RESULT];
};

struct tagZoneTimedExcept
{
	long lExpTime;               
	char cLevel;                 
	unsigned char bSucc;                  
	char cPLevel;                
	unsigned char bPSucc;                 
};

struct tagZoneTimedExceptList
{
	int iCount;                 
	ZONETIMEDEXCEPT excepts[RES_MAX_EXCEPT];
};

struct tagResArmAttr
{
	short nID;                    
	short nRate;                  
};

struct tagResArmHole
{
	char cHole;                  
	char cRes;                   
	short nRate;                  
};

struct tagResArmLevel
{
	char cLevel;                 
	char cRes;                   
	short nRate;                  
};

struct tagResArm
{
	int iIndex;                 
	char szName[RES_MAX_NAME_LEN];
	char szScript[RES_SCRIPT_LEN];
	unsigned char bCategory;               	/*   position */
	char cType;                   	/*   arm class */
	char cAtkType;               
	unsigned char bLevel;                 
	int iExceSuitID;            
	unsigned short wNumber;                
	short nMinAtk;                
	short nMaxAtk;                
	short nAtkDist;               
	short nDef;                   
	short nMatk;                  
	short nMdef;                  
	short nHitRate;               
	short nFlee;                  
	short nMaxWeight;             
	unsigned short wWeight;                
	unsigned int dwSellPrice;            
	unsigned int dwBuyPrice;             
	short nLevelNeed;             
	short nStrNeed;               
	short nVitNeed;               
	short nAgiNeed;               
	short nIntNeed;               
	short nDexNeed;               
	short nLukNeed;               
	short nStr;                   
	short nVit;                   
	short nAgi;                   
	short nInt;                   
	short nDex;                   
	short nLuk;                   
	char cCanPile;               
	char cCanBuy;                
	char cCanDeal;               
	char cCanDrop;               
	char cCanBind;               
	char cCanNotLock;            
	char cEnchase;               
	char cDropLost;              
	char cUseWaste;              
	char cOfflineLost;           
	char cSwitchLost;            
	char cUnique;                
	unsigned short wDuration;              
	char cDragon;                
	char cInsect;                
	char cMachine;               
	char cImmortal;              
	char cTerran;                
	char cAnimal;                
	char cPlant;                 
	char cAquatic;               
	char cAngel;                 
	char cGhost;                 
	char cBeDragon;              
	char cBeInsect;              
	char cBeMachine;             
	char cBeImmortal;            
	char cBeTerran;              
	char cBeAnimal;              
	char cBePlant;               
	char cBeAquatic;             
	char cBeAngel;               
	char cBeGhost;               
	char cNone;                  
	char cWater;                 
	char cEarth;                 
	char cFire;                  
	char cWind;                  
	char cThunder;               
	char cSage;                  
	char cDark;                  
	char cBeNone;                
	char cBeWater;               
	char cBeEarth;               
	char cBeFire;                
	char cBeWind;                
	char cBeThunder;             
	char cBeSage;                
	char cBeDark;                
	char cSex;                   
	char cNoFight;               
	char cCanRepair;             
	char cCanSpecRepair;         
	char cDisappearIfZero;       
	char cNoLimitDuration;       
	short nAttackConsume;         
	short nBeHitConsume;          
	short nDeadConsume;           
	short nTimeConsume;           
	short nRepairConsume;         
	short nSpecRepairConsume;     
	char cCanMail;               
	char cNoTypeDrop;            
	short nSpi;                   
	short nSpiNeed;               
	char cNewbie;                
	char cWarrior;               
	char cSwordman;              
	char cStabber;               
	char cDruggist;              
	char cMagician;              
	char cImportance;            
	RESARMATTR initAttrs[RES_MAX_HOLES];
	RESARMHOLE stInitHole;             
	RESARMLEVEL stInitLevel;            
	int iHurtType;              
	int iDefType;               
};

struct tagResArmTab
{
	int iTotal;                 
	RESARM arms[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResItem
{
	int iIndex;                 
	char szName[RES_MAX_NAME_LEN];
	char szScript[RES_SCRIPT_LEN];
	unsigned char bCategory;              
	unsigned char bLevel;                 
	char cCanPile;               
	char cCanBuy;                
	char cCanDeal;               
	char cCanDrop;               
	char cCanNotLock;            
	unsigned short wWeight;                
	unsigned int dwSellPrice;            
	unsigned int dwBuyPrice;             
	char cDropLost;              
	char cDropEvent;             
	char cUseWaste;              
	char cOfflineLost;           
	char cSwitchLost;            
	char cUnique;                
	char cEnchase;               
	char cRefine;                
	char cNewUnion;              
	char cRevive;                
	char cFly;                   
	char cHome;                  
	char cRecall;                
	char cFate;                  
	char cIdentify;              
	char cRepair;                
	char cSilence;               
	char cDefense;               
	char cSpeed;                 
	char cRestore;               
	char cSleep;                 
	char cPoison;                
	char cCombine;               
	char cEnchasePos;            
	char cOtherUse;              
	char cSelfUse;               
	short nSize;                  
	short nDir;                   
	short nVolume;                
	short nLevelNeed;             
	short nSkillId;               
	RESCOND conds[RES_MAX_CARD_COND];
	RESRESULT results[RES_MAX_CARD_RESULT];
	char cCanMail;               
	char cNoTypeDrop;            
	char cImportance;            
};

struct tagResItemTab
{
	int iTotal;                 
	RESITEM items[1];                	/* RES_ID_ARRAY,   */
};

struct tagResDesc
{
	int iIndex;                 
	char szName[RES_MAX_NAME_LEN];
	char szAvatar[RES_MAX_AVATAR_LEN];
	int iBigMap;                
	int iSmallMap;              
	unsigned char bCategory;              
	unsigned char bLevel;                 
	char cType;                  
	char cNoFight;               
	int iExceSuitID;            
	char cCanPile;               
	char cCanBuy;                
	char cCanDeal;               
	char cCanDrop;               
	char cCanBind;               
	char cDropLost;              
	unsigned short wWeight;                
	char cSelfUse;               
	char cOtherUse;              
	short nLevelNeed;             
	short nAtkDist;               
	char szDesc[RES_TIP_DESC_LEN];
	int iSellPrice;             
	char cCanMail;               
	char cRes;                   
	char cNewbie;                
	char cWarrior;               
	char cSwordman;              
	char cStabber;               
	char cDruggist;              
	char cMagician;              
	char cAtkType;               
	char cSex;                   
	int iUseSound;              
	int iSetSound;              
};

struct tagResDescTab
{
	int iTotal;                 
	RESDESC descs[1];                	/* RES_ID_ARRAY,   */
};

struct tagResExceSuitArm
{
	int iID;                    
};

struct tagResExceSuitAttr
{
	int iAttrID;                
	char cAttrNeed;              
};

struct tagResExceSuit
{
	int iID;                    
	char szName[RES_MAX_NAME_LEN];
	RESEXCESUITARM arm[RES_MAX_EXCESUIT_ARM_NUM];
	RESEXCESUITATTR attr[RES_MAX_EXCESUIT_ATTR_NUM];
};

struct tagResExceSuitTab
{
	int iTotal;                 
	RESEXCESUIT excesuit[1];             	/* RES_ID_ARRAY,   */
};

struct tagResRandomEntry
{
	char cStr;                   
	char cVit;                   
	char cAgi;                   
	char cInt;                   
	char cDex;                   
	char cLuk;                   
	char cHit;                   
	char cCri;                   
	char cFlee;                  
	char cFullFlee;              
	char cAspd;                  
	char cEnchase;               
	int iFirstChance;           
	int iSecondChance;          
	short nAtk;                   
	short nMatk;                  
	short nDef;                   
	short nMdef;                  
};

struct tagResRandom
{
	int iIndex;                 
	RESRANDOMENTRY entries[RES_MAX_RANDOM_ENTRIES];
};

struct tagResRandomTab
{
	int iTotal;                 
	RESRANDOM randoms[1];              	/* RES_ID_ARRAY,   */
};

struct tagResDrop
{
	char cType;                  
	char cMinLevel;              
	char cMaxLevel;              
	char cRes;                   
	short nIndex;                 
	short nRes2;                  
	int iProb;                  
	char cDirect;                
	char cPriSwo;                
	char cPriWar;                
	char cPriWiz;                
	char cPriHer;                
	char cPriDis;                
};

struct tagResMonASkill
{
	short nID;                    
	short nPos;                   
	char cLevel;                 
	char cRate;                  
	short nSpeed;                 
};

struct tagResMonHSkill
{
	short nID;                    
	short nPos;                   
	char cLevel;                 
	char cRate;                  
	short nSpeed;                 
};

struct tagResMonPSkill
{
	short nID;                    
	short nPos;                   
	char cLevel;                 
	char cRate;                  
	short nSpeed;                 
};

struct tagResMonster
{
	int iIndex;                 
	char szName[RES_MAX_NAME_LEN];
	int iExp;                   
	unsigned char bLevel;                 
	char cRace;                  
	char cClass;                 
	char cAtkType;               
	int iHP;                    
	short nMinAtk;                
	short nMaxAtk;                
	short nDef;                   
	short nHitRate;               
	short nFlee;                  
	short nLuk;                   
	short nMinMatk;               
	short nMaxMatk;               
	short nMdef;                  
	short nMoveSpeed;             
	short nAtkSpeed;              
	RESMONPSKILL pSkill[RES_MAX_PSKILL]; 
	RESMONHSKILL hSkill[RES_MAX_HSKILL]; 
	RESMONASKILL aSkill[RES_MAX_ASKILL]; 
	char cMagicReact;            
	char cRevivalReact;          
	short nPatrolDist;            
	short nViewDist;              
	short nRunawayDist;           
	short nTraceDist;             
	RESDROP drops[RES_MAX_DROPITEMS];
	RESSCRIPTINDEX stScriptIdx;            
	char szScriptFile[RES_MAX_NAME_LEN];
	char cInitScript;            
	char cDeathScript;           
	char cReviveScript;          
	char cBeHitScript;           
	char cRunMeetPatrol;         
	char cRunHurtPatrol;         
	char cAttackPatrol;          
	char cReactPatrol;           
	char cPickPatrol;            
	char cHelpPatrol;            
	char cRunHurtAttack;         
	char cRecordAttacker;        
	short nRefreshTime;           
	short nDimension;             
	short nAtkDist;               
	char cType;                  
	char cMaxDropArm;            
	short nRecallDist;            
	short nBirthDist;             
	short nFollowLordID;          
	short nFollowLordDist;        
	short nActDist;               
	int iBossRate;              
	int iBossIndex;             
	char cExpNoDec;              
	char cDropNoDec;             
	short nKeepDistCheck;         
	short nKeepDist;              
	int iHurtType;              
	int iDefType;               
};

struct tagResMonsterTab
{
	int iTotal;                 
	RESMONSTER monsters[1];             	/* RES_ID_ARRAY,   */
};

struct tagResCMon
{
	int iIndex;                 
	int iMapID;                 
	char szName[RES_MAX_NAME_LEN];
	char cType;                  
	char cRes;                   
	short nActDist;               
};

struct tagResCMonTab
{
	int iTotal;                 
	RESCMON cmons[1];                	/* RES_ID_ARRAY,   */
};

struct tagResSellEntry
{
	int iIndex;                 
};

struct tagResSellList
{
	int iIndex;                 
	RESSELLENTRY entries[RES_MAX_SELL_ENTRY];
};

struct tagResSellListTab
{
	int iTotal;                 
	RESSELLLIST lists[1];                	/* RES_ID_ARRAY,   */
};

struct tagResSkillSuit
{
	int iSuitID;                
};

struct tagResSkillAttr
{
	char cAttr;                  
};

struct tagResSkillSpec
{
	char cSpec;                  
};

struct tagResSkillDepend
{
	short nID;                    
	char cLevel;                 
	char cRes;                   
};

struct tagResSkillExcept
{
	short nID;                    
	short nRes;                   
};

struct tagResSkill
{
	int iSkillID;               
	char szName[RES_MAX_NAME_LEN];
	short nLevelNeed;             
	short nLevelNeedAdd;          
	char cArmType;               
	char cTargetSelf;            
	char cTargetTeam;            
	char cTargetEnemy;           
	char cTargetLord;            
	char cTargetPet;             
	short nStatusNeed;            
	char cCanNoTarget;           
	char cNoMiss;                
	short nLearnSucc;             
	char cAttackType;            
	char cSkillType;             
	char cProf;                  
	char cRangeType;             
	short nRadius;                
	short nAngle;                 
	short nDist;                  
	short nWidth;                 
	short nHeight;                
	short nItem;                  
	short nOtherPrepare;          
	short nPrepare;               
	short nPrepareAdd;            
	short nAction;                
	short nActionAdd;             
	short nOtherSep;              
	short nSep;                   
	short nSepAdd;                
	short nSP;                    
	short nSPAdd;                 
	unsigned char bSuccRate;              
	unsigned char bSuccRateAdd;           
	short nDuration;              
	short nDurationAdd;           
	char cRes2;                  
	char cDoAttack;              
	char cOtherLearn;            
	char cOtherLearnLimit;       
	RESSKILLATTR attr[RES_MAX_SKILL_ATTR];
	RESSKILLSPEC spec[RES_MAX_SKILL_SPEC];
	RESSKILLDEPEND depend[RES_MAX_SKILL_DEPEND];
	RESSKILLEXCEPT except[RES_MAX_SKILL_EXCEPT];
	RESSKILLRESULT results[RES_MAX_SKILL_RESULT];
	char cDependOp;              
	char cIsRevive;              
	short nBookID;                
	short nMaxPractise;           
	short nMaxLevel;              
	char cLearnPoint;            
	char cRes3;                  
	int iLearnMoney;            
	short nSPChgStart;            
	char cSPChgControl;          
	char cSPChgPoint;            
	short nManaNeed;              
	short nManaNeedAdd;           
	short nStaminaNeed;           
	short nStaminaNeedAdd;        
	int iHurtType;              
};

struct tagResSkillTab
{
	int iTotal;                 
	RESSKILL skills[1];               	/* RES_ID_ARRAY,   */
};

struct tagResSkillDesc
{
	int iSkillID;               
	char szName[RES_MAX_NAME_LEN];
	char cProf;                  
	char cArmType;               
	char cAttackType;            
	char cSkillType;             
	char szDesc[RES_MAX_LDESC_LEN];
	int iSmallMap;              
	unsigned char bStatusNeed;            
	short nLevelNeed;             
	short nLevelNeedAdd;          
	RESSKILLDEPEND depend[RES_MAX_SKILL_DEPEND];
	RESSKILLEXCEPT except[RES_MAX_SKILL_EXCEPT];
	RESSKILLATTR attr[RES_MAX_SKILL_ATTR];
	RESSKILLSPEC spec[RES_MAX_SKILL_SPEC];
	int iBookID;                
	short nMaxLevel;              
	int iHurtType;              
	short nSP;                    
	short nSPChgStart;            
	char cSPChgControl;          
	char cSPChgPoint;            
};

struct tagResSkillDescTab
{
	int iTotal;                 
	RESSKILLDESC skills[1];               	/* RES_ID_ARRAY,   */
};

struct tagResTitleEntry
{
	char szTitle[RES_MAX_NAME_LEN];
};

struct tagResTitle
{
	int iRace;                  
	RESTITLEENTRY entries[RES_MAX_TITLE_ENTRY];
};

struct tagResTitleTab
{
	int iTotal;                 
	RESTITLE titles[1];               	/* RES_ID_ARRAY,   */
};

struct tagResHonor
{
	int iLevel;                 
	int iFlags;                 
	int iMin;                   
	int iMax;                   
};

struct tagResHonorTab
{
	int iTotal;                 
	RESHONOR honors[1];               	/* RES_ID_ARRAY,   */
};

struct tagResPreTask
{
	int iPreTaskID;             
};

struct tagResTaskTraceItem
{
	int iID;                    
	int iMaxNum;                
};

struct tagResTaskTraceMonster
{
	int iID;                    
	int iMaxNum;                
};

struct tagResTask
{
	int iTaskID;                
	int iType;                  
	int iIcon;                  
	char szDesc[RES_MAX_DESC_LEN];
	char szFinish[RES_MAX_LDESC_LEN];
	char szPublisher[RES_MAX_NAME_LEN];
	char szPlace[RES_MAX_NAME_LEN];
	char szAward[RES_MAX_LDESC_LEN];
	int iRecomLevel;            
	int iMinLevel;              
	int iMaxLevel;              
	int iMinHonor;              
	int iMaxHonor;              
	RESPRETASK preTask[RES_MAX_PRETASK_NUM];
	int iProf;                  
	int iBeginnerSort;          
	int iIsAllowRepeat;         
	int iIsTrace;               
	int iIsContinue;            
	RESTASKTRACEITEM traceItem[RES_MAX_TRACE_ITEM];
	RESTASKTRACEMONSTER traceMonster[RES_MAX_TRACE_MONSTER];
};

struct tagResTaskTab
{
	int iTotal;                 
	RESTASK tasks[1];                	/* RES_ID_ARRAY,   */
};

struct tagResHint
{
	short nHintID;                
	short nTaskID;                
	char szDesc[RES_MAX_HINT_LEN];
};

struct tagResHintTab
{
	int iTotal;                 
	RESHINT hints[1];                	/* RES_ID_ARRAY,   */
};

struct tagResDialog
{
	char cReserve;               
	char cScene;                 
	short nID;                    
	int iCount;                 
	char szDesc[RES_MAX_DIALOG_LEN];
};

struct tagResDialogTab
{
	int iTotal;                 
	RESDIALOG dialogs[1];              	/* RES_ID_ARRAY,   */
};

struct tagResEmotion
{
	short nUse;                   
};

struct tagResRatio
{
	int iScene;                 
	int iEmotionRatio;          
	int iDialogRatio;           
	int iEmotionCount;          
	RESEMOTION emotions[RES_MAX_EMOTION];
};

struct tagResRatioTab
{
	int iTotal;                 
	RESRATIO ratios[1];               	/* RES_ID_ARRAY,   */
};

struct tagResSymbol
{
	int iID;                    
	char szName[RES_MAX_SYMBOL]; 
};

struct tagResSymbolTab
{
	int iTotal;                 
	RESSYMBOL syms[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResMaterial
{
	short nID;                    
	short nNumber;                
};

struct tagResMake
{
	char cClass;                 
	char cCat;                   
	short nMother;                
	int iCharge;                
	int iEnchaseCharge;         
	short nTargetID;              
	short nSkillID;               
	short nNeedPractise;          
	short nMaxPractise;           
	short nGainPractise;          
	short nDisappearRate;         
	short nSuccRate;              
	char cSkillLevelNeed;        
	char cRes1;                  
	char cSrchLevel;             
	char cCount;                 
	RESMATERIAL materials[RES_MAX_MATERIAL];
};

struct tagResMakeTab
{
	int iTotal;                 
	RESMAKE makes[1];                	/* RES_ID_ARRAY,   */
};

struct tagResRefine
{
	char cCat;                   
	char cLevel;                 
	char cItemLevel;             
	char cRes;                   
	RESRESULT results[RES_MAX_REFINE_RESULT];
};

struct tagResRefineTab
{
	int iTotal;                 
	RESREFINE refines[1];              	/* RES_ID_ARRAY,   */
};

struct tagResExceptOverlay
{
	int iType;                  
	int iSpirit;                
	int iPoison;                
	int iComa;                  
	int iSilence;               
	int iIce;                   
	int iStone;                 
	int iWeak;                  
	int iMagicDown;             
	int iBlink;                 
	int iSpeedDown;             
	int iAttackRebound;         
	int iMagicRebound;          
	int iIron;                  
	int iFrenzy;                
	int iStrong;                
	int iMagicUp;               
	int iSpeedUp;               
	int iSmart;                 
	int iPoisonIt;              
	int iDefAdd;                
	int iAspdAdd;               
	int iHurtAbsorb;            
	int iNoBad;                 
	int iHPAdd;                 
	int iSPAdd;                 
	int iDead;                  
	int iKill;                  
	int iCentralize;            
	int iBurst;                 
	int iReal;                  
	int iNoGood;                
	int iLifeAbsorb;            
	int iMagicAbsorb;           
	int iHidden;                
	int iCounterAttack;         
	int iStamp;                 
	int iPK;                    
	int iBurn;                  
	int iFireShield;            
	int iIceShield;             
	int iDressing;              
};

struct tagResExceptOverlayTab
{
	int iTotal;                 
	RESEXCEPTOVERLAY overlays[1];             	/* RES_ID_ARRAY,   */
};

struct tagResSpecResult
{
	unsigned char bAttr;                  
	unsigned char bSucc;                  
	short nValue;                 
};

struct tagResExceptLevel
{
	short nLastTime;              
	short nDist;                  
	RESSPECRESULT stSpec;                 
	RESRESULT results[RES_MAX_EXCEPT_RESULT];
	short nCount;                 
};

struct tagResExceptDetail
{
	int iType;                  
	RESEXCEPTLEVEL levels[RES_MAX_EXCEPT_LEVEL];
};

struct tagResExceptDetailTab
{
	int iTotal;                 
	RESEXCEPTDETAIL details[1];              	/* RES_ID_ARRAY,   */
};

struct tagResCard
{
	int iIndex;                 
	unsigned char bCategory;              
	unsigned char bLevelNeed;             
	unsigned char bMinLevel;              
	unsigned char bMaxLevel;              
	int iPriceAdd;              
	char cRepeat;                
	unsigned char bMonLevel;              
	short nItemID;                
	short nRate;                  
	short nRes;                   
	RESCOND conds[RES_MAX_CARD_COND];
	RESRESULT results[RES_MAX_CARD_RESULT];
	char cSpear;                 
	char cSingleSword;           
	char cDualSword;             
	char cDagger;                
	char cStaff;                 
	char cThrow;                 
	char cFace;                  
	char cHat;                   
	char cNecklace;              
	char cShield;                
	char cGlove;                 
	char cRing;                  
	char cDress;                 
	char cShoe;                  
	char cBag;                   
	char cPet;                   
	char cFlyer;                 
};

struct tagResCardTab
{
	int iTotal;                 
	RESCARD cards[1];                	/* RES_ID_ARRAY,   */
};

struct tagResCoef
{
	int iType;                  
	float fValue;                 
};

struct tagResCoefTab
{
	int iTotal;                 
	RESCOEF coefs[1];                	/* RES_ID_ARRAY,   */
};

struct tagResLevel
{
	int iLevel;                 
	int iExp;                   
	int iTotal;                 
	int iHPRestore;             
	int iHPRestoreMin;          
	int iSPRestore;             
	int iSPRestoreMin;          
	int iMoneyLimit;            
	int iMoneyDealOnce;         
	int iMoneyDealTotal;        
	int iMoneyDealCount;        
	int iMoneyDealLittle;       
};

struct tagResLevelTab
{
	int iTotal;                 
	RESLEVEL levels[1];               	/* RES_ID_ARRAY,   */
};

struct tagResLevelUp
{
	short nProf;                  
	short nType;                  
	int iInitStr;               
	int iInitDex;               
	int iInitVit;               
	int iInitAgi;               
	int iInitInt;               
	int iInitLuk;               
	int iInitSpi;               
	int iInitHP;                
	int iInitSP;                
	int iFiveStr;               
	int iFiveDex;               
	int iFiveVit;               
	int iFiveAgi;               
	int iFiveInt;               
	int iFiveLuk;               
	int iStrOdd;                
	int iDexOdd;                
	int iVitOdd;                
	int iAgiOdd;                
	int iIntOdd;                
	int iLukOdd;                
	int iSpiOdd;                
	int iStrEven;               
	int iDexEven;               
	int iVitEven;               
	int iAgiEven;               
	int iIntEven;               
	int iLukEven;               
	int iSpiEven;               
	int iAtkDist;               
	int iMinAtk;                
	int iMaxAtk;                
	int iMinAtkAdd;             
	int iMaxAtkAdd;             
	int iHPMin;                 
	int iHPMax;                 
	int iHPMulVit;              
	int iSPMin;                 
	int iSPMax;                 
	int iSPMulInt;              
	int iStrAdd;                
	int iStrLevel;              
	int iDexAdd;                
	int iDexLevel;              
	int iVitAdd;                
	int iVitLevel;              
	int iAgiAdd;                
	int iAgiLevel;              
	int iIntAdd;                
	int iIntLevel;              
	int iLukAdd;                
	int iLukLevel;              
	int iRandMin;               
	int iRandMax;               
	int iRandAdd;               
	int iRandLevel;             
	int iPointAdd;              
	int iPointLevel;            
	int iVitAddMax;             
	int iIntAddMax;             
};

struct tagResLevelUpTab
{
	int iTotal;                 
	RESLEVELUP levels[1];               	/* RES_ID_ARRAY,   */
};

struct tagResTrans
{
	int iID;                    
	char szName[RES_MAX_NAME_LEN];
	int iMapID;                 
	int x;                      
	int y;                      
	short nDist;                  
	char cDir;                   
	char cCity;                  
};

struct tagResTransTab
{
	int iTotal;                 
	RESTRANS trans[1];                	/* RES_ID_ARRAY,   */
};

struct tagResTransRefEntry
{
	int iRefID;                 
	int iMinMap;                
	int iPrice;                 
};

struct tagResTransRef
{
	int iListID;                
	RESTRANSREFENTRY entries[RES_MAX_TRANS_ENTRY];
};

struct tagResTransRefTab
{
	int iTotal;                 
	RESTRANSREF refs[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResTime
{
	int iLevel;                 
	int iNewbie;                
	int iWarrior;               
	int iSwordman;              
	int iStabber;               
	int iDruggist;              
	int iMagician;              
};

struct tagResTimeTab
{
	int iTotal;                 
	RESTIME times[1];                	/* RES_ID_ARRAY,   */
};

struct tagResDefense
{
	int iRace;                  
	int iDummy;                 
	int iSpirit;                
	int iPoison;                
	int iComa;                  
	int iSilence;               
	int iIce;                   
	int iStone;                 
	int iWeak;                  
	int iMagicDown;             
	int iBlink;                 
	int iSpeedDown;             
	int iAttackRebound;         
	int iMagicRebound;          
	int iIron;                  
	int iFrenzy;                
	int iStrong;                
	int iMagicUp;               
	int iSpeedUp;               
	int iSmart;                 
	int iLifeAbsorb;            
	int iMagicAbsorb;           
	int iDead;                  
	int iHidden;                
	int iCounterAttack;         
};

struct tagResDefenseTab
{
	int iTotal;                 
	RESDEFENSE defs[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResElement
{
	int iAtkElement;            
	int iNone;                  
	int iWater;                 
	int iEarth;                 
	int iFire;                  
	int iWind;                  
	int iThunder;               
	int iSage;                  
	int iDark;                  
};

struct tagResElementTab
{
	int iTotal;                 
	RESELEMENT eles[1];                 	/* RES_ID_ARRAY,   */
};

struct tagWorkBonus
{
	char cType;                  
	char cRes;                   
	short nIndex;                 
	int iNumber;                
	short nPractisePoint;         
	short nRatio;                 
};

struct tagWork
{
	short nWorkType;              
	short nPractiseLevelMin;      
	short nPractiseLevelMax;      
	short nSkillID;               
	short nPetSkillID;            
	short nPetSkillAdd;           
	char szStatusTitle[RES_MAX_NAME_LEN];
	short nStatusDuration;        
	short nLowLevel;              
	short nHighLevel;             
	short nBonusTimeUnit;         
	WORKBONUS bonusList[RES_MAX_WORK_BONUS];
};

struct tagWorkTab
{
	int iTotal;                 
	WORK works[1];                	/* RES_ID_ARRAY,   */
};

struct tagMPBonus
{
	char cType;                  
	short nRatio;                 
	int iNumber;                
};

struct tagSysBonusForMP
{
	short nLowLevel;              
	short nHighLevel;             
	MPBONUS bonusList[RES_MAX_MP_BONUS];
};

struct tagSysBonusForMPTab
{
	int iTotal;                 
	SYSBONUSFORMP bonus[1];                	/* RES_ID_ARRAY,   */
};

struct tagBonusForMP
{
	short nPrenticeLevel;         
	MPBONUS bonusList[RES_MAX_MP_BONUS];
};

struct tagBonusForMPTab
{
	int iTotal;                 
	BONUSFORMP bonus[1];                	/* RES_ID_ARRAY,   */
};

struct tagMPMoral
{
	int iIndex;                 
	int iMinPrentice;           
	int iMaxPrentice;           
	short nMinRatio;              
	short nMaxRatio;              
	char szTitle[MAX_MORAL_TITLE_LEN];
};

struct tagMPMoralTab
{
	int iTotal;                 
	MPMORAL morals[1];               	/* RES_ID_ARRAY,   */
};

struct tagMPLimitNum
{
	int iMinOwe;                
	int iMinRatio;              
	int iPrenticeLimit;         
};

struct tagMPLimitNumTab
{
	int iTotal;                 
	MPLIMITNUM limit[1];                	/* RES_ID_ARRAY,   */
};

struct tagResTip
{
	int iID;                    
	char szDesc[RES_TIP_DESC_LEN];
};

struct tagResTipTab
{
	int iTotal;                 
	RESTIP tips[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResHelp
{
	int iID;                    
	char szLevel1[RES_MAX_LEVEL1_LEN];
	char szLevel2[RES_MAX_LEVEL2_LEN];
	char szHelp[RES_MAX_HELP_LEN];
};

struct tagResHelpTab
{
	int iTotal;                 
	RESHELP helps[1];                	/* RES_ID_ARRAY,   */
};

struct tagResSkillID
{
	short nID;                    
};

struct tagResItemID
{
	short nID;                    
};

struct tagResSelfItemID
{
	short nID;                    
};

struct tagResAction
{
	int iIndex;                 
	char cStand;                 
	char cMove;                  
	char cSeat;                  
	char cDead;                  
	char cAttack;                
	char cBeAttack;              
	char cSing;                  
	char cUseItem;               
	char cPickItem;              
	char cDropItem;              
	char cWearArm;               
	char cWork;                  
	char cMake;                  
	char cRefine;                
	char cNpcDlg;                
	char cNpcDeal;               
	char cPlayerDeal;            
	char cPlayerShop;            
	char cHorse;                 
	char cTrans;                 
	char cConsign;               
	char cMail;                  
	char cLock;                  
	char szRes[9];               
	RESSKILLID skills[RES_MAX_ACTION_SKILL];
	RESITEMID items[RES_MAX_ACTION_ITEM];
	RESSELFITEMID selfitems[RES_MAX_ACTION_ITEM];
};

struct tagResActionTab
{
	int iTotal;                 
	RESACTION actions[1];              	/* RES_ID_ARRAY,   */
};

struct tagResInitSkill
{
	char cProf;                  
	char cLevel;                 
	short nSkillID;               
};

struct tagResConfig
{
	int iSmallPackID;           
	int iSmallPackItem;         
	int iSmallPackMoney;        
	int iBigPackID;             
	int iBigPackItem;           
	int iBigPackMoney;          
	int iLetterID;              
	int iChatRepeatCount;       
	int iChatRepeatTime;        
	int iChatRepeatBlock;       
	int iChatInterval;          
	int iWChatInterval;         
	int iMapChatItem;           
	int iLinkedMapChatItem;     
	int iZoneChatItem;          
	int iWorldChatItem;         
	int iOpDist;                
	int iInitMaleArm;           
	int iInitFemaleArm;         
	int iInitWeapon;            
	int iInitItem;              
	int iInitMoney;             
	int iBirthMapCount;         
	int birthMap[RES_MAX_BIRTH_MAP];
	int iFamLetterID1;          
	int iFamLetterID2;          
	int iFamLetterID3;          
	int iTradeSkill;            
	int iTradePractise;         
	int iAuthInterval;          
	int iAuthTTL;               
	int iAuthOpt;               
	int iAuthQuesLen;           
	int iAuthReCheckCount;      
	int iAuthReCheckSec;        
	int iAuthReCheckTTL;        
	int iAuthQuitWaitSec;       
	int iAuthBanCount;          
	int iAuthBanSec;            
	int iAuthCleanSec;          
	int iInitSkillCount;        
	RESINITSKILL initSkills[RES_MAX_INITSKILL];
	int iBenchTimeMoveMax;      
	int iBenchTimeMoveMin;      
	int iBenchTimeMoveInterval; 
	int iBenchTimeAttackMax;    
	int iBenchTimeAttackMin;    
	int iStopTimeMin;           
	int iStopTimeMax;           
	int iChargeMapCount;        
	int chargeMap[RES_MAX_CHARGE_MAP];
	int iLantern;               
	int iLanternItem;           
	int iMonsterSnowMan;        
	int iNpcSnowMan;            
	int iSnowManLifeTime;       
};

struct tagResConfigTab
{
	int iTotal;                 
	RESCONFIG configs[1];              	/* RES_ID_ARRAY,   */
};

struct tagResPerm
{
	int iUin;                   
	int iPerm;                  
};

struct tagResPermTab
{
	int iTotal;                 
	RESPERM perms[1];                	/* RES_ID_ARRAY,   */
};

struct tagResPunish
{
	short nMinLevel;              
	short nMaxLevel;              
	short nMinHonor;              
	short nMaxHonor;              
	char cMoneyLost;             
	char cExpLost;               
	char cHPRestore;             
	char cSPRestore;             
	short nDropOneItem;           
	short nDropTwoItem;           
	short nDropThreeItem;         
	short nDropAllItem;           
	short nDropOneArm;            
	short nDropTwoArm;            
	short nDropThreeArm;          
	short nDropAllArm;            
};

struct tagResPunishTab
{
	int iTotal;                 
	RESPUNISH punishs[1];              	/* RES_ID_ARRAY,   */
};

struct tagResPKPunish
{
	short nMinPKValue;            
	short nMaxPKValue;            
	short nDecMoneyRatio;         
	short nDecMoneyProb;          
	short nDropItemRatio;         
	short nDropClassMin;          
	short nDropClassMax;          
	short nDropNumRatioMin;       
	short nDropNumRatioMax;       
	short nDropWearRatio;         
	short nDropWearLevelDec;      
	short nDecExpRatio;           
};

struct tagResPKPunishTab
{
	int iTotal;                 
	RESPKPUNISH pKPunishs[1];            	/* RES_ID_ARRAY,   */
};

struct tagResMusic
{
	int iMapID;                 
	char szMusicName[RES_MAX_MUSIC_LEN];
};

struct tagResMusicTab
{
	int iTotal;                 
	RESMUSIC musics[1];               	/* RES_ID_ARRAY,   */
};

struct tagResRequire
{
	char cType;                  
	char cRes;                   
	short nNumber;                
	int iValue;                 
};

struct tagResHairStyle
{
	int iIndex;                 
	char cSex;                   
	char cRes1;                  
	short nRes2;                  
	char szAvatar[RES_MAX_AVATAR_LEN];
	RESREQUIRE reqs[RES_MAX_REQUIRE];  
};

struct tagResHairStyleTab
{
	int iTotal;                 
	RESHAIRSTYLE styles[1];               	/* RES_ID_ARRAY,   */
};

struct tagResHairColor
{
	int iIndex;                 
	unsigned int dwColor;                
	RESREQUIRE reqs[RES_MAX_REQUIRE];  
};

struct tagResHairColorTab
{
	int iTotal;                 
	RESHAIRCOLOR colors[1];               	/* RES_ID_ARRAY,   */
};

struct tagResSound
{
	int iSkill;                 
	int iSingSound;             
	int iSingDelay;             
	int iStartSound;            
	int iStartDelay;            
	int iFlySound;              
	int iFlyDelay;              
	int iBeHitSound;            
	int iBeHitDelay;            
};

struct tagResSoundTab
{
	int iTotal;                 
	RESSOUND sounds[1];               	/* RES_ID_ARRAY,   */
};

struct tagResPetSkillID
{
	short nSkillID;               
};

struct tagResPetSkillLearnNo
{
	int iPetID;                 
	RESPETSKILLID learnnos[RES_MAX_PET_LEARNNO];
};

struct tagResPetSkillLearnNoTab
{
	int iTotal;                 
	RESPETSKILLLEARNNO learnnos[1];             	/* RES_ID_ARRAY,   */
};

struct tagResPetEat
{
	short nEatID;                 
	short nEatValue;              
};

struct tagResPetGrow
{
	int iPetID;                 
	char szName[RES_MAX_NAME_LEN];
	unsigned char bCaptureLevel;          
	char cTaskSpec;              
	short nCaptureTool;           
	short nBaseCaptureSucc;       
	short nHonorAdd;              
	short nStrNickAdd;            
	short nIntNickAdd;            
	short nAgiNickAdd;            
	short nVitNickAdd;            
	short nFlexNickAdd;           
	short nMaxCaptureSucc;        
	char cFoodAttr;              
	char cPetType;               
	unsigned char bInitStr;               
	unsigned char bInitDex;               
	unsigned char bInitAgi;               
	unsigned char bInitVit;               
	unsigned char bInitInt;               
	unsigned char bInitSpi;               
	short nInitHP;                
	short nInitSP;                
	short nRes0;                  
	short nAtkDist;               
	unsigned char bStrOdd;                
	unsigned char bVitOdd;                
	unsigned char bDexOdd;                
	unsigned char bAgiOdd;                
	unsigned char bIntOdd;                
	unsigned char bSpiOdd;                
	unsigned char bStrEven;               
	unsigned char bVitEven;               
	unsigned char bDexEven;               
	unsigned char bAgiEven;               
	unsigned char bIntEven;               
	unsigned char bSpiEven;               
	unsigned char bHPMin;                 
	unsigned char bHPMax;                 
	unsigned char bVitHPAdd;              
	unsigned char bSPMin;                 
	unsigned char bSPMax;                 
	unsigned char bIntSPAdd;              
	unsigned char bStrAdd;                
	unsigned char bStrLevel;              
	unsigned char bAgiAdd;                
	unsigned char bAgiLevel;              
	unsigned char bVitAdd;                
	unsigned char bVitLevel;              
	unsigned char bIntAdd;                
	unsigned char bIntLevel;              
	unsigned char bRandMin;               
	unsigned char bRandMax;               
	unsigned char bRandAdd;               
	unsigned char bRandLevel;             
	unsigned char bInitTrust;             
	unsigned char bDealTrust;             
	unsigned char bCanDealTrust;          
	unsigned char bPickupTrust;           
	char cCallbackAdd;           
	char cStarveAdd1;            
	short nStarveInternal1;       
	char cStarveAdd2;            
	short nStarveInternal2;       
	char cStarveAdd3;            
	short nStarveInternal3;       
	char cStarveAdd4;            
	short nStarveInternal4;       
	char cOnlineAdd;             
	short nOnlineInternal;        
	unsigned char bInitStarve;            
	int iAwakeMoney;            
	unsigned char bAwakeStarve;           
	unsigned char bAwakeTrust;            
	short nFollowSpd;             
	short nHorseBaseSpd;          
	short nHorseSpdAdd;           
	short nHorseSpdLimit;         
	RESPETEAT eats[RES_MAX_PET_EAT];  
	short nHonorNeed;             
	short nLevelNeed;             
	short nMaxPetLevel;           
	char cCanBuy;                
	char cCanDeal;               
	char cCanDrop;               
	char cCanMail;               
	char cCanNotLock;            
	char cDropLost;              
	char cOfflineLost;           
	char cSwitchLost;            
	char cUnique;                
	RESPETSKILLID initSkills[RES_MAX_PET_INIT_SKILL];
};

struct tagResPetGrowTab
{
	int iTotal;                 
	RESPETGROW petgrows[1];             	/* RES_ID_ARRAY,   */
};

struct tagResPetLevelExp
{
	int iLevel;                 
	int iExpTotal;              
	int iExpNeed;               
};

struct tagResPetLevelExpTab
{
	int iTotal;                 
	RESPETLEVELEXP petexps[1];              	/* RES_ID_ARRAY,   */
};

struct tagResNickGrow
{
	int iNickId;                
	char szNickName[RES_MAX_PET_NICK_LEN];
	short nGetRate;               
	char cStatusPoint;           
	char cTwoStr;                
	char cTwoVit;                
	char cTwoAgi;                
	char cTwoInt;                
	unsigned char bStrOdd;                
	unsigned char bVitOdd;                
	unsigned char bDexOdd;                
	unsigned char bAgiOdd;                
	unsigned char bIntOdd;                
	unsigned char bSpiOdd;                
	unsigned char bStrEven;               
	unsigned char bVitEven;               
	unsigned char bDexEven;               
	unsigned char bAgiEven;               
	unsigned char bIntEven;               
	unsigned char bSpiEven;               
};

struct tagResNickGrowTab
{
	int iTotal;                 
	RESNICKGROW nickgrows[1];            	/* RES_ID_ARRAY,   */
};

struct tagResFamLevel
{
	int iFamLevel;              
	int iMinReputation;         
	int iMaxReputation;         
	int iMinMember;             
	int iMaxMember;             
	char cMaxShaikh;             
	char cMaxPresbyter;          
	char cMaxCustomPos;          
	char cMaxCustomer;           
	char cHouseLevel;            
	char cHasTotem;              
	char cStashLevel;            
	char cHasTrans;              
	int iUpdCharge;             
	int iMinWealth;             
	int iUpdWealth;             
};

struct tagResFamLevelTab
{
	int iTotal;                 
	RESFAMLEVEL fams[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResFamLevelPerm
{
	int iMemberLevel;           
	char szName[RES_MAX_FAM_POSNAME_LEN];
	int iMinContribute;         
	int iMaxContribute;         
	int iPermLevel;             
};

struct tagResFamLevelPermTab
{
	int iTotal;                 
	RESFAMLEVELPERM fams[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResFamPosPerm
{
	int iFamPos;                
	char szName[RES_MAX_FAM_POSNAME_LEN];
	int iPermLevel;             
	char szDesc[RES_MAX_LDESC_LEN];
	int iMemberMinLevel;        
};

struct tagResFamPosPermTab
{
	int iTotal;                 
	RESFAMPOSPERM fams[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResFamStashUpd
{
	int iStashLevel;            
	int iBuyCharge;             
	int iUpdCharge;             
	int iVolume;                
	int iMaintainCharge;        
};

struct tagResFamStashUpdTab
{
	int iTotal;                 
	RESFAMSTASHUPD fams[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResFamPerm
{
	int iPermLevel;             
	char cCreateFam;             
	char cUpgradeFam;            
	char cDestroyFam;            
	char cCancelDestroy;         
	char cQuitFam;               
	char cInvite;                
	char cAgreeJoin;             
	char cDismissMember;         
	char cGrantPresbyte;         
	char cRevokePresbyter;       
	char cSetCustomPos;          
	char cGrantCustomer;         
	char cRevokeCustomer;        
	char cTransSelfPos;          
	char cBidFamHouse;           
	char cBackFamHouse;          
	char cUseFamHouse;           
	char cBuyFamStash;           
	char cSetFamPasswd;          
	char cChgFamPasswd;          
	char cGrantStashGet;         
	char cStashPut;              
	char cUseTotem;              
	char cUseTrans;              
	char cHasFamTitle;           
	char cSendFamNotice;         
	char cViewFamBoard;          
	char cUseFamChannel;         
	char cSendFamMail;           
	char cMakeFamSheet;          
	char cCopyFamSheet;          
	char cExchgFamSheet;         
	char cDispatchFamSheet;      
	char cChgFamLogo;            
	char cChgFamAnnounce;        
	char cViewFamInfo;           
	char cViewMemberInfo;        
	char cSetFamUnion;           
	char cCancelFamUnion;        
	char cSetFamOppose;          
	char cCancelFamOppose;       
	char cViewRelativeFam;       
	char cInviteOtherEnter;      
	char cBuyFamLogo;            
};

struct tagResFamPermTab
{
	int iTotal;                 
	RESFAMPERM fams[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResLifeSkillGain
{
	short nDefIdx;                
	short nRate;                  
	char cPractiseGain;          
	char cRes;                   
	short nPos;                   
};

struct tagResLifeSkill
{
	int iMonIdx;                
	short nSkillID;               
	short nItemID;                
	short nPractiseMin;           
	short nPractiseMax;           
	short nPetSkillID;            
	short nPetSkillAdd;           
	char szName[RES_MAX_LIFESKILL_NAME_LEN];
	char szAction[RES_MAX_LIFESKILL_NAME_LEN];
	RESLIFESKILLGAIN gains[RES_MAX_LIFESKILL_GAIN];
};

struct tagResLifeSkillTab
{
	int iTotal;                 
	RESLIFESKILL skills[1];               	/* RES_ID_ARRAY,   */
};

struct tagResPetSpeak
{
	char szSpeak[RES_MAX_PET_SPEAK_LEN];
	short nRate;                  
	short nRes;                   
};

struct tagResPetDlg
{
	char cGender;                
	char cType;                  
	short nValue;                 
	short nSuccRate;              
	short nRes;                   
	RESPETSPEAK speaks[RES_MAX_PET_SPEAKS];
};

struct tagResPetDlgTab
{
	int iTotal;                 
	RESPETDLG dlgs[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResTrap
{
	int iTrapID;                
	short nLevelNeed;             
	short nLevelNeedAdd;          
	char cTargetSelf;            
	char cTargetTeam;            
	char cTargetEnemy;           
	char cTargetLord;            
	char cRangeType;             
	char cRes0;                  
	short nRadius;                
	short nAngle;                 
	short nDist;                  
	short nWidth;                 
	short nHeight;                
	short nSuccRate;              
	short nRes;                   
	RESRESULT results[RES_MAX_TRAP_RESULT];
};

struct tagResTrapTab
{
	int iTotal;                 
	RESTRAP traps[1];                	/* RES_ID_ARRAY,   */
};

struct tagResRollMsg
{
	int iLevelArea;             
	int iSubSeqID;              
	int iInterval;              
	char szMsg[RES_MAX_LDESC_LEN];
};

struct tagResRollMsgTab
{
	int iTotal;                 
	RESROLLMSG roll[1];                 	/* RES_ID_ARRAY,   */
};

struct tagResPractiseLevel
{
	short nLevel;                 
	short nRes;                   
	short nMinPractise;           
	short nMaxPractise;           
	char szName[RES_MAX_PRACTISE_NAME];
};

struct tagResPractise
{
	int iID;                    
	RESPRACTISELEVEL levels[RES_MAX_PRACTISE_LEVEL];
};

struct tagResPractiseTab
{
	int iTotal;                 
	RESPRACTISE practises[1];            	/* RES_ID_ARRAY,   */
};

struct tagResDefAttr
{
	int iDefType;               
	int iIsNoEffect;            
	int iIsImmune;              
	int iHurtFix;               
	int iHitRateFix;            
	int iCriticalRateFix;       
	int iMagicCriticalRateFix;  
};

struct tagResHurtAndDef
{
	int iHurtType;              
	RESDEFATTR defAttr[MAX_DEF_ATTR_COL];
};

struct tagResHurtAndDefTab
{
	int iTotal;                 
	RESHURTANDDEF hurtAndDef[1];           	/* RES_ID_ARRAY,   */
};


#pragma pack()

#ifdef __cplusplus
}
#endif

#endif /* OV_RES_H */
