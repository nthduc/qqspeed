
// Wizard-generated connection point proxy class
// WARNING: This file may be regenerated by the wizard


#pragma once

template<class T>
class CProxyINetworkSink :
	public IConnectionPointImpl<T, &__uuidof(INetworkSink)>
{
public:
	HRESULT Fire_OnResponseLogin(ServerEntity  __MIDL_0014, LoginResult  __MIDL_0015)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnResponseLogin(__MIDL_0014, __MIDL_0015);
			}
		}
		return hr;
	}
	HRESULT Fire_OnServerMessage(ServerEntity  __MIDL_0016, UINT  MsgID, UINT  MsgType, PBYTE  Data, INT DataLen, PBYTE csHead, PBYTE msgHead)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnServerMessage(__MIDL_0016, MsgID, MsgType, Data, DataLen, csHead, msgHead);
			}
		}
		return hr;
	}
	HRESULT Fire_OnClose(ServerEntity  __MIDL_0017, int  nErrorCode)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnClose(__MIDL_0017, nErrorCode);
			}
		}
		return hr;
	}
	HRESULT Fire_OnConnect(ServerEntity  __MIDL_0018, int  nErrorCode)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnConnect(__MIDL_0018, nErrorCode);
			}
		}
		return hr;
	}
	HRESULT Fire_OnCreate(ServerEntity  __MIDL_0019, int  nErrorCode)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnCreate(__MIDL_0019, nErrorCode);
			}
		}
		return hr;
	}
	HRESULT Fire_OnStartLogin(ServerEntity  __MIDL_0020, int  nErrorCode)
	{
		HRESULT hr = S_OK;
		T * pThis = static_cast<T *>(this);
		int cConnections = m_vec.GetSize();

		for (int iConnection = 0; iConnection < cConnections; iConnection++)
		{
			pThis->Lock();
			CComPtr<IUnknown> punkConnection = m_vec.GetAt(iConnection);
			pThis->Unlock();

			INetworkSink * pConnection = static_cast<INetworkSink *>(punkConnection.p);

			if (pConnection)
			{
				hr = pConnection->OnStartLogin(__MIDL_0020, nErrorCode);
			}
		}
		return hr;
	}
};

